template(name='checklist')
    .ui.large.input
        input.quickadd_task(type='text' placeholder='add task')
    |#{complete_count} complete
    |#{incomplete_count} incomplete
    .ui.divided.list
        each org_task_docs
            +task_item_small
                
                
template(name='task_item_small')
    .item
        .content
            if completed
                i.checkmark.green.link.icon.zoomer.mark_incomplete(title='mark incomplete')
            else 
                i.circle.outline.link.icon.zoomer.mark_complete(title='mark complete')
            |#{title}
            if completed 
                .ui.basic.label completed {{from_now completed_timestamp}} by #{completed_username}
            // .ui.checkbox
            //     label.details check me
            //     input(type='checkbox' checked="")
            // i.chevron.down.large.icon.view_more(title='view more')
            // if viewing_full
            // +array_field key='tags' label='tags' icon='tags'
            a.zoomer(href="/d/task/#{_id}" title='edit')
                i.pencil.icon
                // +edit_button_icon
            // +voting 
            +grat_small
            +single_user_field key='lead_id' label='Lead'
            // +textarea_field key='body'
            i.remove.link.icon.zoomer(title='remove task')
            
                
template(name='edit_button_icon')
    i.pencil.icon.toggle(title='edit task')

template(name='tasks')
    .ui.stackable.padded.grid
        .four.wide.column
            .ui.inline.header 
                // i.tasks.icon
                +i name='tasks'
                |tasks
            div
            +add_model_button model='task'
            .ui.inline.small.header 
                i.user.friends.icon
                |authors
            each picked_authors
                a.ui.blue.label.unpick_author
                    |#{this}
            each author_results
                if title
                    a.ui.basic.circular.small.link.label.pick_author
                        |#{title} 
                        small.ui.grey.text #{count}
            div
            .ui.small.inline.header
                i.tags.icon
                |tags
            each picked_tags
                a.ui.blue.label.unpick_task
                    |#{this}
            each task_tag_results
                if title
                    a.ui.basic.circular.small.link.label.pick_task
                        |#{title} 
                        small.ui.grey.text #{count}
            div
            .ui.small.inline.header
                i.fire.icon
                |groups
            each picked_task_groups
                a.ui.blue.label.unpick_group
                    |#{this}
            each task_group_results
                if title
                    a.ui.basic.circular.small.link.label.pick_group
                        |#{title} 
                        small.ui.grey.text #{count}
        .twelve.wide.column
            span.sorting_row
                +search_input model='task' field='title'
                +session_set key='view_users' value='grid' icon='th' 
                +session_set key='view_users' value='list' icon='list'
                +session_set key='sort_users_direction' value='-1' icon='chevron down'
                +session_set key='sort_users_direction' value='1' icon='chevron up'
                +session_set key='sort_users_key' value='points' icon='coins'
                +session_set key='sort_users_key' value='created_date' icon='clock'
                +session_set key='view_limit' value=1
                +session_set key='view_limit' value=10
                +session_set key='view_limit' value=20
                +session_set key='view_limit' value=50
                i.large.sort.icon
                +set_sort_key key='comment_count' label='comment count' icon='chat'
                +set_sort_key key='views' label='views' icon='eye'
                +set_sort_key key='points' label='points' icon='line chart'
                +toggle_sort_direction_button
                |&nbsp;
                |&nbsp;
                .spacer 
        
            span.ui.doubling.cards.scrolling
                each task_docs
                    .ui.card
                        +task_card
                    
                    
template(name='my_tasks')
    .ui.header my tasks
                    
                    



template(name='task_crud')
    // .ui.segment
    .ui.styled.accordion
        .title
            .dropdown.icon
            .ui.inline.header
                // +i name='shield'
                // |#{picked_tasks.count}
                | tasks
        .content
            .ui.icon.large.input 
                if task_search_value
                    i.large.red.remove.link.icon.zoomer.clear_search
                else 
                    i.search.icon
                input.task_search(type='text' placeholder='search' value=task_search_value)
            if task_results
                // .ui.selection.link.animated.list
                each task_results
                    .ui.basic.circular.large.button.pick_task.zoomer
                        i.grey.plus.icon
                        if image_id
                            img.ui.avatar.image(src="{{c.url image_id width=300 height=300 gravity='face' crop='fill'}}")
                        |#{title}
            if task_search_value
                .ui.large.button.create_task(title='add')
                    i.plus.icon
                    |#{task_search_value}
            // if picked_tasks
            .ui.header 
                |#{picked_tasks.count}
                |tasks
            .smallscroll
                each picked_tasks
                     .ui.horizontal.fluid.card.show_modal
                        .content
                            .ui.grid
                                .row
                                    // .column
                                    .fourteen.wide.column
                                        .left.floated
                                            a.ui.inline.header
                                                |!{title}
                                            div
                                            +eft_viewer_small
                                            // img(src="{{c.url image_id width=50 height=50}}")
                                            // div    
                                            // |!{content}
                                    .two.wide.column
                                        .right.floated
                                            if _is 'model' 'task'
                                                +ismall name='what-i-do' color='42E8C4' cl='ui inline image'
                                            div
                                            |#{when}
                                .row
                                    .six.wide.column
                                        img.invert(src="{{c.url image_id width=10 height=10}}")
                                    .ten.wide.column
                                        |!{content}
                                .sixteen.wide.column
                                    if currentUser.admin_mode
                                        .ui.tertiary.large.button.zoomer.remove_task 
                                            i.remove.icon
                                            |remove 
                                        .ui.tertiary.large.button.zoomer.toggle_assign 
                                            i.user.plus.icon
                                            | assign
                                        if assigned_to 
                                            |assigned to #{asigned_to.username}
                                        else 
                                            |unnassigned
                                        if is_assigning 
                                            each task_holders 
                                                .ui.label #{username}
                                        else 
                                            with assigned_users
                                                .ui.green.label #{username}
                                        a.ui.tertiary.right.floated.icon.large.button.zoomer.fly_right(href="/task/#{_id}/edit" title='edit task')
                                            i.setting.icon
                                    else
                                        // else if can_take
                                        if has_taken 
                                            |taken by #{taken_user.name}
                                            .ui.large.button.release_task
                                                i.undo.icon
                                                |release 
                                        else if can_take
                                            .ui.tertiary.large.button.zoomer.take_task 
                                                i.checkmark.icon
                                                | take
                                        else if is_taken 
                                            |taken by #{taken_user.name}
                                    a.ui.tertiary.large.button.zoomer(href="/task/#{_id}")
                                        |view
                                        i.chevron.right.icon
                    .ui.modal 
                        .ui.header hi
                        
                        
                        
template(name='work')
    .ui.stackable.padded.grid
        .four.wide.column
            .ui.inline.header 
                i.wrench.icon
                |work
            div
            .ui.inline.small.header 
                i.user.friends.icon
                |staff
            each picked_authors
                a.ui.blue.label.unpick_author
                    |#{this}
            each author_results
                if title
                    a.ui.basic.circular.small.link.label.pick_author
                        |#{title} 
                        small.ui.grey.text #{count}
            div
            .ui.inline.small.header 
                i.tasks.icon
                |task
            each picked_tasks
                a.ui.blue.label.unpick_task
                    |#{this}
            each task_results
                if title
                    a.ui.basic.circular.small.link.label.pick_task
                        |#{title} 
                        small.ui.grey.text #{count}
            div
            .ui.inline.small.header 
                i.marker.icon
                |location
            each picked_locations
                a.ui.blue.label.unpick_location
                    |#{this}
            each location_results
                if title
                    a.ui.basic.circular.small.link.label.pick_location
                        |#{title} 
                        small.ui.grey.text #{count}
            div
            .ui.inline.small.header 
                i.marker.icon
                |timestamp_tags
            each picked_timestamp_tags
                a.ui.blue.label.unpick_timestamp_tag
                    |#{this}
            each timestamp_tag_results
                if title
                    a.ui.basic.circular.small.link.label.pick_timestamp_tag
                        |#{title} 
                        small.ui.grey.text #{count}
        .twelve.wide.column
            // .ui.basic.button.add_work
            //     i.large.plus.icon
            //     |log work
            // .ui.basic.button.add_task
            //     i.large.plus.icon
            //     |task
            // each picked_sections
            //     button.ui.blue.compact.small.button.unpick_section(tabindex='0')
            //         //- i.remove.icon
            //         | #{this}
            // // div
            // +i name='clock' cl='ui inline mini image'
            // each sections
            //     button.ui.compact.basic.button.pick_section(tabindex="0" class=result_class title=count) #{title}
            //         //- small #{count}
            // // unless one_post
            span.sorting_row
                // +session_set key='view_users' value='grid' icon='th' 
                // +session_set key='view_users' value='list' icon='list'
                // +session_set key='sort_users_direction' value='-1' icon='chevron down'
                // +session_set key='sort_users_direction' value='1' icon='chevron up'
                // +session_set key='sort_users_key' value='points' icon='coins'
                // +session_set key='sort_users_key' value='created_date' icon='clock'
                // +session_set key='view_limit' value=1
                // +session_set key='view_limit' value=10
                // +session_set key='view_limit' value=20
                // +session_set key='view_limit' value=50

                
                i.large.sort.icon
                +set_sort_key key='price_usd' label='price' icon='money'
                +set_sort_key key='_timestamp' label='added' icon='clock'
                // +set_sort_key key='comment_count' label='comment count' icon='chat'
                // +set_sort_key key='views' label='views' icon='eye'
                // +set_sort_key key='points' label='points' icon='line chart'
                .ui.compact.icon.button.set_sort_direction(title='toggle sort direction')
                    if sorting_up
                        i.sort.amount.down.icon
                    else
                        i.sort.amount.up.icon
                |&nbsp;
                |&nbsp;
                // .ui.compact.menu
                //     .ui.simple.dropdown.item
                //         strong #{product_limit}
                //         i.dropdown.icon
                //         .menu
                        //   +set_product_limit amount=1
                           +set_product_limit amount=5
                           +set_product_limit amount=10
                            +set_product_limit amount=20
                // .ui.inline.small.header ryan: #{ryan_total}
                // .ui.inline.small.header eric: #{eric_total}
                .spacer 
                
            .ui.large.selection.animated.list.scrolling
                each work_list
                    a.item(href="/work/#{_id}")
                        .content
                            .ui.inline.small.header 
                                img.ui.tiny.inline.image(src="{{c.url staff_image_id width=400 height=300 crop='pad'}}")
                                |#{_author_username}: 
                            img.ui.tiny.inline.image(src="{{c.url work_task.image_id width=400 height=300 crop='pad'}}")
                            if before_image_id
                                img.ui.inline.tiny.image(src="{{c.url before_image_id width=400 height=300 crop='pad'}}")
                            if after_image_id
                                img.ui.inline.tiny.image(src="{{c.url after_image_id width=400 height=300 crop='pad'}}")
                            if image_id
                                img.ui.tiny.inline.image(src="{{c.url image_id width=400 height=300 crop='pad'}}")
                            .ui.inline.small.header 
                                |#{task_title}
                            .ui.inline.small.header 
                                img.ui.tiny.inline.image(src="{{c.url location_image_id width=400 height=300 crop='pad'}}")
                                |@#{location_title}
                            | #{when}
                            small ({{long_date _timestamp}})
                            |#{task_points}pts
                        // .content
                        //     +favorite_icon_toggle
                
                
                
template(name='work_edit')
    .ui.stackable.padded.grid
        .row
            .five.wide.column
                .ui.segment
                    .ui.header
                        i.image.icon
                        |image
                    +image_field key='before_image_id' label='before image' capture="camera"
                    +image_field key='after_image_id' label='after image' capture="camera"
                .ui.inline.header 
                    i.red.marker.icon
                    |location
                each task_locations
                    a.ui.circular.image.link.label.pick_location.zoomer(class=location_picker_class)
                        img.ui.image(src="{{c.url image_id width=200 height=200 gravity='face' crop='fill'}}")
                        | #{title}
                .ui.red.small.fluid.button.delete_work
                    i.remove.icon   
                    | cancel
                if in_dev
                    +print_this
            .six.wide.column
                .ui.big.button Start/Stop Task
                    +i name='play-button-circled--v1' color='40C057' cl='ui massive image'
                |00:00
            .five.wide.column
                // .ui.inline.small.header
                    i.pencil.icon
                    | #{title}
                    | work edit
                with work_task
                    .ui.segment
                        img.ui.tiny.inline.image(src="{{c.url image_id width=200 height=200 gravity='face' crop='fill'}}")
                        .ui.inline.header 
                            |#{title}
                        |#{description}
                .ui.grey.header 
                    i.clock.icon
                    |#{when}
                // +text_field key='title' label='title'
                div
                +textarea_field key='notes' label='notes'
                +block template='checklist'
                // if location_id
                //     if image_id
                .ui.hidden.divider
                a.ui.massive.icon.fluid.green.button.submit_work(title='submit')
                    i.checkmark.big.icon

                
template(name='work_view')
    if currentUser.editing 
        +work_edit
    .ui.stackable.padded.grid
        .row
            .four.wide.column
                a.ui.basic.icon.button.fly_right(href="/work")
                    i.wrench.large.icon
                .ui.inline.header
                    | #{title}
                    small work view
                +image_view key='image_id' label='image'
                div
                a.ui.icon.button(href="/work/#{_id}/edit")
                    i.pencil.icon
            .eight.wide.centered.column
                a.zoomer(href="/user/#{_author_username}/")
                    img.ui.small.inline.image(src="{{c.url author.image_id width=200 height=200 gravity='face' crop='fill'}}")
                    .ui.large.inline.header #{_author_username} 
                div
                a.zoomer(href="/task/#{task_id}/")
                    img.ui.small.inline.image(src="{{c.url task_image_id width=200 height=200 gravity='face' crop='fill'}}")
                    .ui.inline.header 
                        |#{task_title}
                div
                a.zoomer(href="/location/#{location_id}/") 
                    img.ui.small.inline.image(src="{{c.url location_image_id width=200 height=200 gravity='face' crop='fill'}}")
                    .ui.inline.header @#{location_title}
                .ui.header #{when}
                div.scrolling
                    +textarea_field key='notes' label='directions'
                // +array_field key='tags' label='tags' icon='tags'
                .ui.big.button Start/Stop Task
                    +i name='play-button-circled--v1' color='40C057' cl='ui medium image'
                |00:00

                +comments
            .four.wide.column
                +voting_full
                .ui.header 
                    i.checkmark.icon
                    |vouched by #{vouchers.count}
                each vouchers
                    .ui.header #{username}
                unless is_author
                    if vouched_for
                        .ui.button.vouch
                            i.checkmark.icon 
                            |vouch 
                    else
                        .ui.small.button.unvouch
                            |unvouch
                    
                .ui.header #{task_points} pts earned
                if in_dev 
                    +print_this
                                            
                                                
                                         

                    
                    
template(name='task_card')
    // a.ui.card(href="/d/task/#{_id}")
    img.ui.image(src="{{c.url image_id width=400 height=300 crop='pad'}}")
    .content
        .ui.header 
            if complete 
                i.large.green.checkmark.icon
            |#{title}
        .ui.inline.header #{when}
        |!{description}
        .ui.inline.header #{points}pts
        each tags
            .ui.small.basic.label #{this}
        +author_info
            
            
                
                
template(name='task_view')
    .ui.stackable.padded.grid
        .three.column.row
            .column
                // +parent_unit_button
                .ui.inline.header
                    | #{title}
                    small task view
                // +image_view key='image_id' label='image'
                div
                // a.ui.big.button.fly_right(href="/task/#{_id}/edit")
                    i.pencil.icon
                    |edit
                +image_field key='image_id' icon='image' label='image'
                +image_field key='banner_image_id' icon='image' label='banner image'
                if currentUser.editing
                    +title_link_buttons               
                +array_field key='tags' icon='tags'

            .column
                +textarea_field key='body' label='description' tagline='describe this task'
                +boolean_view key='has_user_assignment' label='has user assignment'
                if has_user_assignment
                    each group_members
                        .ui.button.assign_member #{username}
                +boolean_view key='has_minute_expectation' label='has minute expectation'
                if has_minute_expectation
                    +number_field key='minute_expectation' label='time expectation (minutes)'
                +boolean_view key='has_duedatetime' label='has due date/time' icon='calendar'
                if has_duedatetime
                    +datetime_field key='due_datetime' label='due date/time' icon='calendar'
                +number_field key='amount' label='amount (leave 0 for infinite)'
                +boolean_view key='has_point_bounty' label='has point bounty' icon='hashtag'
                if has_point_bounty
                    +number_field key='point_bounty' label='point_bounty'
                // if unit_id 
                //     +parent_unit_button
            .column
                +block template='checklist'
                    .ui.basic.center.aligned.segment
                        +eft_picker color="FF73EA" icon='food' label='food'
                        +eft_picker color="B785E1" icon='home' label='housing'
                        +eft_picker color="7229AF" icon='tshirt' label='clothing'
                        +eft_picker color="1255B8" icon='car' label='transportation'
                        +eft_picker color="83DFF4" icon='lightning' label='energy'
                        +eft_picker color="42E8C4" icon='leaf' label='zero waste'
                        +eft_picker color="40C057" icon='smile' label='wellness'
                        +eft_picker color="FAB005" icon='university' label='education'
                        +eft_picker color="FD7E14" icon='paint brush' label='art'
                        +eft_picker color="FF0000" icon='users' label="community core"
                +voting_full
                +comments
                +textarea_field key='description' label='description'
                +array_field key='tags' label='tags' icon='tags'
                .ui.header 
                    i.wrench.icon
                    |Record Work                
                if currentUser
                    .ui.button.record_work
                        |Begin Task

                // .ui.selection.animated.list
                    each task_work
                        a.item(href="/work/#{_id}") 
                            img.ui.tiny.inline.image(src="{{c.url image_id width=400 height=300 crop='pad'}}")
                            if before_image_id
                                img.ui.tiny.inline.image(src="{{c.url before_image_id width=400 height=300 crop='pad'}}")
                            if before_image_id
                                img.ui.tiny.inline.image(src="{{c.url after_image_id width=400 height=300 crop='pad'}}")
                            |#{when} #{_author_username}

    if currentUser.editing
        .three.column.row
            .column
                .ui.inline.header
                    i.pencil.icon
                    | #{title}
                    small task
                a.ui.fluid.large.icon.green.button.fly_left(href="/task/#{_id}/" title='save product')
                    i.checkmark.big.icon
                +text_field key='title' label='title'
                +image_field key='image_id' label='image'
                // +role_crud key='image_id' label='image'
                div
                +boolean_field key='complete' label='complete'
                unless complete
                    .ui.button.mark_complete
                        i.checkmark.icon
                        |mark complete
                if complete
                    .ui.header 
                        i.green.checkmark.icon
                        |complete
                        |{{from_now complete_timestamp}}
                        |{{long_date complete_timestamp}}
                // +boolean_field key='has_user_assignment' label='has user assignment'
                // if has_user_assignment
                each group_members
                    .ui.button.assign_member #{username}
                div
                // +boolean_field key='has_minute_expectation' label='has minute expectation'
                // div
                // if has_minute_expectation
                +number_field key='minute_expectation' label='time expectation (minutes)'
                div
                // +boolean_field key='has_duedatetime' label='has due date/time' icon='calendar'
                div
                +model_crud model='project' icon='project'
            .column
                // if has_duedatetime
                +datetime_field key='due_datetime' label='due date/time' icon='calendar'
                // +number_field key='amount' label='amount (leave 0 for infinite)'
                // div
                // +boolean_field key='has_point_bounty' label='has point bounty' icon='hashtag'
                // div
                // if has_point_bounty
                +number_field key='point_bounty' label='point bounty' icon='coins'
                div
                div
                +single_user_field key='user_assignment' label='user assignment' icon='user'
                // +boolean_field key='has_subgroup_specification' label='has specific subgroup' icon='users'
                div
                .ui.header
                    i.red.marker.icon
                    |location
                +text_field key='location' 
                +geolocate_button

                // .ui.header     
                //     i.users.icon
                //     |subgroup availability
                // each current_subgroups
                //     .ui.button.select_subgroup(class=subgroup_class)
                //         img.ui.tiny.inline.image(src="{{c.url image_id width=400 height=300 crop='pad'}}")
                //         |#{title}
                // +number_field key='amount' label='amount (leave 0 for infinite)'
            .column
                +textarea_field key='description' label='description'
                // .ui.header     
                //     i.large.building.icon
                //     |associated unit
                // if selected_unit
                //     .ui.header #{title}
                // each units
                //     .ui.button.select_location(class=location_class)
                //         img.ui.tiny.inline.image(src="{{c.url image_id width=400 height=300 crop='pad'}}")
                //         |#{title}
                +array_field key='tags' label='tags' icon='tags'
                .ui.red.button.delete_task
                    i.remove.icon   
                    | delete
