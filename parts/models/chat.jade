template(name='view_chats')
    //- img.ui.fluid.image.bg_overlay(src="{{c.url 'nightbg' width=1000 crop='fit'}}")    
    .ui.stackable.padded.grid
        .row
            .four.wide.column
                .ui.header
                    i.chat.outline.icon
                    | chat
                //- .ui.label(title='Unread') #{unread_message_count} Unread
                .unread_icon(data-tooltip='unread messages' data-position='bottom center')
                    i.secured-letter.icon
                i.tag.icon
                +cloud filter='chat'
                //- +participant_filter type='chat'
                +chat_list
                //- .ui.header viewing: 
                //-     if viewing_published
                //-         #view_private_chats.ui.button 
                //-             i.unhide.icon
                //-             |Published
                //-     if viewing_private
                //-         #view_published_chats.ui.button 
                //-             i.lock.icon
                //-             |Private
            .twelve.wide.column
                with selected_chat
                    +view_chat
                // .ui.cards
                //     each chats




template(name='chat_messages_pane')
    .ui.smoothed.segment.description.chat_messages.scrolling
        .ui.comments
            each chat_messages
                +chat_message
    if in_chat
        .ui.icon.fluid.attached.input
            i.chevron.right.icon
            input.add_message(type='text' placeholder='add message...')
                
template(name='chat_list')
    div
    .ui.inline.header channels
    .ui.icon.basic.button#create_chat(title='new channel')
        i.plus.icon

    .ui.segments
        each chat_list_items
            +chat_list_item
    .ui.inline.header direct messages
    //- .ui.icon.basic.button#create_private_chat(title='new dm')
    //-     i.plus.icon

    .ui.segments
        each private_chats
            +private_chat_item
            
            
template(name='chat_list_item')
    .ui.smoothed.pointer.segment.chat_list_item(href='#' class=chat_list_item_class)
        .content
            .description
                //- .ui.horizontal.list
                //-     each participants
                //-         .item(title=username)
                //-             // a(href="/user/profile/#{_id}")
                //-             img.ui.avatar.image(src="{{c.url image_id width=400 height=400 gravity='face' crop='fill'}}")
                //-             |#{username}
                //-             +user_status
            .description
                .ui.inline.small.header #{title}
                if private
                    i.lock.icon
                //- each tags
                //-     .ui.label #{this}
            //- .description
                // strong {{cutString last_message.body 100}}
                //- strong {{last_message.body}}
            //- .description
            //-     |by #{last_message.author.username} #{last_message.when}
            //- .extra
            //-     .span #{unread_message_count} unread messages
            //-     .span #{message_count} total messages                
            
            
template(name='private_chat_item')
    .ui.smoothed.pointer.segment.chat_list_item(href='#' class=chat_list_item_class)
        .content
            .description
                //- .ui.horizontal.list
                //-     each participants
                //-         .item(title=username)
                //-             // a(href="/user/profile/#{_id}")
                //-             img.ui.avatar.image(src="{{c.url image_id width=400 height=400 gravity='face' crop='fill'}}")
                //-             |#{username}
                //-             +user_status
            .description
                .ui.header #{title}
                //- each tags
                //-     .ui.label #{this}
            //- .description
                // strong {{cutString last_message.body 100}}
                //- strong {{last_message.body}}
            //- .description
            //-     |by #{last_message.author.username} #{last_message.when}
            //- .extra
            //-     .span #{unread_message_count} unread messages
            //-     .span #{message_count} total messages                
            
            
            
template(name='chat_message')
    // .ui.segment.message_segment(class=message_segment_class)
        // .ui.comments
    .comment
        a.avatar(href="/user/#{author.username}")
            img.ui.avatar.image(src="{{c.url author.profile_image_id width=400 height=400 gravity='face' crop='fill'}}")
        .content
            a.author(href="/user/#{author.username}") 
                |#{author.username}
                +user_status author
            .metadata
                span.date #{when}
            .text
                if read
                    | #{body}
                else 
                    strong #{body}
            .actions
                +voting_small
                if is_author
                    i.remove.link.icon.delete_message(title='delete message')
                else
                    if read
                        i.envelope.open.outline.link.large.icon.mark_unread(title='mark unread')
                    else
                        i.mail.link.outline.large.icon.mark_read(title='mark read')
                each readers
                    .ui.tiny.label(title="read by #{username}") #{username}
                    // img.ui.avatar.image(src="{{c.url image_id width=50 height=50 gravity='face' crop='fill'}}")
                                                

                                                        
                                                        
template(name='view_chat')
    .ui.stackable.grid
        .centered.row
            .eleven.wide.column
                // +minimal_chat_view this
                +chat_messages_pane this
            .five.wide.column
                //- .ui.inline.header #{message_count} messages
                //- .ui.inline.header #{unread_message_count} unread
                +text_edit key='title' direct=true
                .ui.header
                    |participants
                if currentUser
                    if in_chat
                        //- i.sign.in.link.icon.leave_chat(title='leave')
                        .ui.basic.button.leave_chat
                            i.sign.in.icon
                            |leave
                    else
                        .ui.basic.button.join_chat
                            i.sign.out.icon
                            |join
                .ui.relaxed.list
                    each participants
                        .item
                            img.ui.avatar.image(src="{{c.url profile_image_id width=400 height=400 gravity='face' crop='fill'}}")
                            .content
                                .header
                                    a(href="/user/#{username}") #{username}
                                    if subscribed
                                        i.bell.outline.icon(title='subscribed')
                                    else
                                        i.bell.slash.outline.icon(title='not subscribed')
                                .description
                                    // | @#{username}
                                    +user_status
                if can_edit
                    .ui.icon.basic.button.close_chat(title='close chat')
                        i.ban.icon
                        |close chat
                if can_edit
                    +array_edit key='tags' label='tags' direct=true
                else     
                    +array_view key='tags' label='tags' direct=true
                //- if can_edit
                //-     +multi_doc key='view_roles' label='view roles' ref_model='role' direct=true
                //- else     
                //-     +multi_doc_view key='view_roles' label='view roles' ref_model='role' direct=true
                //- +subscribe_button
                //- +bookmark_button
                //- unless is_author
                //-     +resonate_button
                //-     +thanks_button
                //- +resonates_list
                if can_edit
                    +boolean_edit key='private' label='private' direct=true
                .ui.header started by 
                    img.ui.avatar.image(src="{{c.url author.profile_image_id width=400 height=400 gravity='face' crop='fill'}}")
                    |#{_author.name} #{when}