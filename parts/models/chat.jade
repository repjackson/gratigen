template(name='view_chats')
    img.ui.fluid.image.bg_overlay(src="{{c.url 'nightbg' width=1000 crop='fit'}}")    
    .ui.stackable.padded.grid
        .row
            .four.wide.column
                .ui.inline.header
                    i.chat.outline.icon
                    | chat
                //- .ui.label(title='Unread') #{unread_message_count} Unread
                .unread_icon(data-tooltip='unread messages' data-position='bottom center')
                    i.secured-letter.icon
                // i.tag.icon
                // +cloud filter='chat'
                //- +participant_filter type='chat'
                +chat_list
                .ui.header viewing: 
                    if viewing_published
                        #view_private_chats.ui.button 
                            i.unhide.icon
                            |published
                    if viewing_private
                        #view_published_chats.ui.button 
                            i.lock.icon
                            |private
            .twelve.wide.column
                each model_docs_helper 'org'
                    .ui.button #{title}
                with selected_chat
                    +view_chat
                // .ui.cards
                //     +view_chat




template(name='chat_messages_pane')
    .ui.smoothed.segment.description.chat_messages.scrolling
        .ui.comments
            each chat_messages
                +chat_message
    if in_chat
        if adding_message
            with new_doc 
                +textarea_field key='body'
        .ui.icon.fluid.attached.input
            i.chevron.right.icon
            textarea.add_message(type='text' placeholder='add message...')
                
template(name='chat_list')
    .ui.inline.header 
        i.users.icon
        |channels
    .ui.icon.basic.button#create_chat(title='new channel')
        i.plus.icon

    // .ui.big.buttons
    each chat_list_items
        +chat_list_item
    .ui.inline.header direct messages
    //- .ui.icon.basic.button#create_private_chat(title='new dm')
    //-     i.plus.icon

    .ui.segments
        each private_chats
            +private_chat_item
            
            
template(name='chat_list_item')
    a.ui.big.button.chat_list_item(class=chat_list_item_class)
        .content
            .description
                //- .ui.horizontal.list
                //-     each participants
                //-         .item(title=username)
                //-             // a(href="/user/profile/#{_id}")
                //-             img.ui.avatar.image(src="{{c.url image_id width=400 height=400 gravity='face' crop='fill'}}")
                //-             |#{username}
                //-             +user_status
            .description
                .ui.inline.small.header #{title}
                if private
                    i.lock.icon
                each tags
                    .ui.label #{this}
            // .description
            //     strong {{cutString last_message.body 100}}
            //     strong {{last_message.body}}
            // .description
            //     |by #{last_message.author.username} #{last_message.when}
            .extra
                .span #{unread_message_count} unread messages
                .span #{message_count} total messages                
            
            
template(name='private_chat_item')
    .ui.smoothed.pointer.segment.chat_list_item(href='#' class=chat_list_item_class)
        .content
            .description
                //- .ui.horizontal.list
                //-     each participants
                //-         .item(title=username)
                //-             // a(href="/user/profile/#{_id}")
                //-             img.ui.avatar.image(src="{{c.url image_id width=400 height=400 gravity='face' crop='fill'}}")
                //-             |#{username}
                //-             +user_status
            .description
                .ui.header #{title}
                //- each tags
                //-     .ui.label #{this}
            //- .description
                // strong {{cutString last_message.body 100}}
                //- strong {{last_message.body}}
            //- .description
            //-     |by #{last_message.author.username} #{last_message.when}
            //- .extra
            //-     .span #{unread_message_count} unread messages
            //-     .span #{message_count} total messages                
            
            
            
template(name='chat_message')
    // .ui.segment.message_segment(class=message_segment_class)
        // .ui.comments
    .comment.zoome
        a.avatar.zoomer(href="/user/#{_author.username}")
            img.ui.avatar.image.zoomer(src="{{c.url _author.image_id width=400 height=400 gravity='face' crop='fill'}}")
        .content.zoome
            a.author.zoomer(href="/user/#{_author.username}") 
                |#{_author.username}
                +user_status _author
            .metadata
                span.date #{when}
            .text
                if read
                    .f12
                        | !{body}
                else 
                    .f14
                        strong !{body}
                if is_editing 
                    +textarea_field key='body'
                    .ui.big.icon.green.button.invert.save_this
                        i.save.icon
            .actions
                i.pencil.large.link.circular.icon.zoomer.edit_this(class=edit_this_class)
                i.reply.large.link.circular.icon.zoomer.reply_this
                i.money.large.link.circular.icon.zoomer.tip_this
                i.shopping.cart.large.link.circular.icon.zoomer.tip_this
                +voting
                if is_author
                    i.remove.link.large.circular.icon.delete_message(title='delete message')
                else
                    if read
                        i.envelope.open.outline.link.large.circular.large.icon.mark_unread(title='mark unread')
                    else
                        i.mail.link.outline.large.circular.large.icon.mark_read(title='mark read')
                each readers
                    .ui.tiny.label(title="read by #{username}") #{username}
                    // img.ui.avatar.image(src="{{c.url image_id width=50 height=50 gravity='face' crop='fill'}}")
        .content 
            +comments
        
        if replies
            .ui.header replies 
            each replies 
                if is_editing 
                    +text_field key='body'
                else 
                    .ui.header #{body}

                                                        
                                                        
template(name='view_chat')
    .ui.stackable.grid
        .centered.row
            .eleven.wide.column
                // +minimal_chat_view this
                +chat_messages_pane this
            .five.wide.column
                //- .ui.inline.header #{message_count} messages
                //- .ui.inline.header #{unread_message_count} unread
                +text_field key='title'
                .ui.inline.header
                    |participants
                if currentUser
                    if in_chat
                        //- i.sign.in.link.icon.leave_chat(title='leave')
                        .ui.basic.button.leave_chat
                            i.sign.in.icon
                            |leave
                    else
                        .ui.basic.button.join_chat
                            i.sign.out.icon
                            |join
                .ui.relaxed.list
                    each participants
                        .item
                            img.ui.avatar.image(src="{{c.url profile_image_id width=400 height=400 gravity='face' crop='fill'}}")
                            .content
                                .header
                                    a(href="/user/#{username}") #{username}
                                    if subscribed
                                        i.bell.outline.icon(title='subscribed')
                                    else
                                        i.bell.slash.outline.icon(title='not subscribed')
                                .description
                                    // | @#{username}
                                    +user_status
                +toggle_edit_button
                if is_editing
                    .ui.icon.basic.button.close_chat(title='close chat')
                        i.ban.icon
                        |close chat
                    +image_field key='image_id' 
                    +array_field key='tags' label='tags'
                else     
                    +array_field key='tags' label='tags'
                //- if can_edit
                //-     +multi_doc key='view_roles' label='view roles' ref_model='role'
                //- else     
                //-     +multi_doc_view key='view_roles' label='view roles' ref_model='role'
                +subscribe_button
                +bookmark_button
                unless is_author
                    +resonate_button
                    +thanks_button
                //- +resonates_list
                if can_edit
                    +boolean_field key='private' label='private'
                .ui.header started by 
                    img.ui.avatar.image(src="{{c.url author.profile_image_id width=400 height=400 gravity='face' crop='fill'}}")
                    |#{_author.name} #{when}
                    
                  
template(name='toggle_edit_button')
    .ui.icon.button.edit_this
        i.big.pencil.icon
                    
