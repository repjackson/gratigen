template(name='post_card')
    .ui.card
        if youtube_id 
            +youtube_view key='youtube_id'
        if image_id 
            +image_view key='image_id'
        .content
            .ui.inline.header #{title}
            if private 
                i.large.lock.icon
            .smallscroll
                |!{content}
                .ui.label 
                    i.user.icon
                    |#{_author_username}
                i.tag.icon
                each tags 
                    .ui.basic.label #{this}
            .ui.small.grey.header
                i.clock.icon
                |#{when}
            // +comments_view_small
            +author_info


template(name='set_post_sort_key')
    .item.set_sort
        if color
            .ui.label(class=color) #{label}
        else 
            if emoji
                em(data-emoji=emoji)
            else if icon
                i.icon(class=icon)
            |#{label}
        
        
                
template(name='user_posts')
    .ui.inline.header 
        +i name='blog'
        |user posts
    if is_current_user
        .ui.basic.icon.button.add_post
            i.large.plus.icon
    .ui.padded.stackable.one.column.grid
        .column
            .ui.stackable.cards.scrolling
                each post_docs 
                    .ui.card
                        .content
                            a(href="/post/#{_id}") 
                                img.ui.image(src="{{c.url image_id width=400 height=300 crop='pad'}}")
    
                            .smallscroll 
                                |!{content}
                            // |created #{when}
                            small {{when}}
                            a.ui.icon.button(href='/post/#{_id}')
                                i.large.chevron.right.icon
                            
        
        

template(name='set_view_mode_post')
    .item.set_view
        i.icon(class=icon)
        |#{title}


// template(name='set_limit')
    .ui.compact.small.basic.button.set_limit #{amount}



        
template(name='post_item')
    .ui.fluid.segment.view_post.pointer
        a.ui.header(href="/post/#{_id}") #{title}
        div
        .ui.small.grey.inline.header #{when}
        | #{content}
        each tags 
            .ui.basic.small.label #{this}
        

template(name='post_view')
    // with current_doc
    //     if youtube_id 
    //         +youtube_view key='youtube_id'
    //     .ui.ten.wide.centered.segment
    //             // .four.wide.column
    //                 .ui.basic.segment
    //                     .ui.header #{title}
    //                     // a.ui.circular.button.fly_left(href="/posts")
    //                     //     i.chevron.left.big.icon
    //                     //     i.newspaper.big.icon
    //                     //     .ui.inline.header posts
    //                     // div
    //                     // .ui.inline.grey.header {{from_now start_datetime}}
                        
    //                     // if can_edit
    //                     //     a.ui.circular.icon.button.edit_post(href="/post/#{_id}/edit" title='edit')
    //                     //         i.big.link.pencil.icon
    //                     .ui.segment
    //                         .ui.header 
    //                             small author
    //                         a.ui.header(href="/user/#{_author.username}") 
    //                             img.ui.avatar.image(src="{{c.url _author.image_id height=200 width=200 gravity='face' crop='fill'}}" class=currentUser.darkmode_class)
    //                             |#{_author.username}
    //                     +voting_full
    //                     .ui.header #{when}
    //                     //- +array_field key='location_tags' label='location_tags'
    //                     // +comments
    //             .sixteen.wide.column.scrolling
    //                 // +textarea_field key='body' tagline='write your post!'
    //                 // +textarea_field key='body' label='Post' tagline='write your post!'
    //                 // +tags
    //                 // +textarea_field key='body' tagline='body'
    //                 // +textarea_field key='description' tagline='body'
    //                 // +textarea_field key='content' tagline='body'
    //                 // img.ui.image(src="{{c.url image_id }}" class=currentUser.darkmode_class)
    //                 // a.ui.header(href="/user/#{target.username}")
    //                 //     |#{target.username}
    //                 // +array_field key='tags' label='tags'
    //                 // div 
    //                 // .spacer
    //                 // .spacer
    //                 // if watson 
    //                 //     +watson_view
    //             // .four.wide.column
    //                 .ui.header read by 
    //                 // each read_users 
    //                 //     .item #{username}
    //                 .ui.fluid.green.button.submit
    //                     i.checkmark.icon
    //                     |submit
                        
                    
                    
template(name='post_edit')
    .ui.stackable.padded.grid
        .row 
            .ten.wide.column
                .ui.inline.header 
                    +icolor name='news' cl='ui image inline pointer'
                    |edit post
                a.ui.icon.green.big.button(href="/post/#{_id}" title='save')
                    i.checkmark.big.icon
                +text_field key='title' label='title'
                +textarea_field key='content' label='content'
                +youtube_field key='youtube_id' label='youtube id'
            .six.wide.column
                .ui.red.button.delete_post
                    i.remove.icon
                    |delete post
                .ui.header 
                    small author
                    |#{_author.username}
                if is_dev
                    +single_user_field key='_author_id' label='author'
                +image_field key='image_id' label='image'
                div 
            .ten.wide.column
                +text_field key='location' 
                +geolocate_button

                +array_field key='tags' label='tags' icon='tags'
                +boolean_field key='published' icon='visible'
                if is_dev 
                    +text_field key='model' label='model' icon='database'
                +array_field key='location_tags' label='location_tags' icon='marker'
                // unless published
                //     a.ui.fluid.green.button.submit(href="/save")
                //         i.checkmark.icon
                //         |publish
                // else
                //     .ui.basic.button.unpublish 
                //         |unpublish
            .six.wide.column
                .ui.header
                    +i name='audience'
                    |audience
                +boolean_field key='private' label='private' 
                if private 
                    +multi_user_field key='access_user_ids' label='user picker'
                +group_crud