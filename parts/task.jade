template(name='tasks')
    .ui.stackable.padded.grid
        .four.wide.column
            .ui.inline.header 
                // i.tasks.icon
                +i name='tasks'
                |tasks
            div
            +add_model_button model='task'
            .ui.inline.small.header 
                i.user.friends.icon
                |authors
            each picked_authors
                a.ui.blue.label.unpick_author
                    |#{this}
            each author_results
                if title
                    a.ui.basic.circular.small.link.label.pick_author
                        |#{title} 
                        small.ui.grey.text #{count}
            div
            .ui.small.inline.header
                i.tags.icon
                |tags
            each picked_tags
                a.ui.blue.label.unpick_task
                    |#{this}
            each task_tag_results
                if title
                    a.ui.basic.circular.small.link.label.pick_task
                        |#{title} 
                        small.ui.grey.text #{count}
            div
            .ui.small.inline.header
                i.fire.icon
                |groups
            each picked_task_groups
                a.ui.blue.label.unpick_group
                    |#{this}
            each task_group_results
                if title
                    a.ui.basic.circular.small.link.label.pick_group
                        |#{title} 
                        small.ui.grey.text #{count}
        .twelve.wide.column
            span.sorting_row
                +search_input model='task' field='title'
                +session_set key='view_users' value='grid' icon='th' 
                +session_set key='view_users' value='list' icon='list'
                +session_set key='sort_users_direction' value='-1' icon='chevron down'
                +session_set key='sort_users_direction' value='1' icon='chevron up'
                +session_set key='sort_users_key' value='points' icon='coins'
                +session_set key='sort_users_key' value='created_date' icon='clock'
                +session_set key='view_limit' value=1
                +session_set key='view_limit' value=10
                +session_set key='view_limit' value=20
                +session_set key='view_limit' value=50
                    
                
                i.large.sort.icon
                +set_sort_key key='comment_count' label='comment count' icon='chat'
                +set_sort_key key='views' label='views' icon='eye'
                +set_sort_key key='points' label='points' icon='line chart'
                +toggle_sort_direction_button
                |&nbsp;
                |&nbsp;
                .spacer 
        
            span.ui.doubling.cards.scrolling
                each task_docs
                    +task_card
                    
                    
                    
template(name='toggle_sort_direction_button')
    .ui.compact.icon.button.set_sort_direction(title='toggle sort direction')
        if sorting_up
            i.sort.amount.down.icon
        else
            i.sort.amount.up.icon

                    
                    
template(name='task_card')
    .ui.link.card.fly_right
        a(href="/task/#{_id}") 
            img.ui.image(src="{{c.url image_id width=400 height=300 crop='pad'}}")
        a.content(href="/task/#{_id}") 
            .ui.header 
                if complete 
                    i.large.green.checkmark.icon
                |#{title}
            .ui.inline.header #{when}
            |!{description}
            .ui.inline.header #{points}pts
            each tags
                .ui.small.basic.label #{this}
            +author_info
            
            
                
                
template(name='task_edit')
    with current_doc
        .ui.stackable.padded.grid
            .three.column.row
                .column
                    .ui.inline.header
                        i.pencil.icon
                        | #{title}
                        small task
                    a.ui.fluid.large.icon.green.button.fly_left(href="/task/#{_id}/" title='save product')
                        i.checkmark.big.icon
                    +text_edit key='title' label='title' direct=true
                    +image_edit key='image_id' label='image' direct=true
                    +role_picker key='image_id' label='image' direct=true
                    div
                    +boolean_edit key='complete' label='complete' direct=true
                    unless complete
                        .ui.button.mark_complete
                            i.checkmark.icon
                            |mark complete
                    if complete
                        .ui.header 
                            i.green.checkmark.icon
                            |complete
                            |{{from_now complete_timestamp}}
                            |{{long_date complete_timestamp}}
                    // +boolean_edit key='has_user_assignment' label='has user assignment' direct=true
                    // if has_user_assignment
                    each group_members
                        .ui.button.assign_member #{username}
                    div
                    // +boolean_edit key='has_minute_expectation' label='has minute expectation' direct=true
                    // div
                    // if has_minute_expectation
                    +number_edit key='minute_expectation' label='time expectation (minutes)' direct=true
                    div
                    // +boolean_edit key='has_duedatetime' label='has due date/time' icon='calendar' direct=true
                    div
                    +model_picker model='project' icon='project'
                .column
                    // if has_duedatetime
                    +datetime_edit key='due_datetime' label='due date/time' icon='calendar' direct=true
                    // +number_edit key='amount' label='amount (leave 0 for infinite)' direct=true
                    // div
                    // +boolean_edit key='has_point_bounty' label='has point bounty' icon='hashtag' direct=true
                    // div
                    // if has_point_bounty
                    +number_edit key='point_bounty' label='point bounty' direct=true icon='coins'
                    div
                    div
                    +single_user_edit key='user_assignment' label='user assignment' icon='user' direct=true
                    // +boolean_edit key='has_subgroup_specification' label='has specific subgroup' icon='users' direct=true
                    div
                    .ui.header
                        i.red.marker.icon
                        |location
                    +text_edit key='location' 
                    +geolocate_button

                    // .ui.header     
                    //     i.users.icon
                    //     |subgroup availability
                    // each current_subgroups
                    //     .ui.button.select_subgroup(class=subgroup_class)
                    //         img.ui.tiny.inline.image(src="{{c.url image_id width=400 height=300 crop='pad'}}")
                    //         |#{title}
                    // +number_edit key='amount' label='amount (leave 0 for infinite)' direct=true
                .column
                    +html_edit key='description' label='description' direct=true
                    // .ui.header     
                    //     i.large.building.icon
                    //     |associated unit
                    // if selected_unit
                    //     .ui.header #{title}
                    // each units
                    //     .ui.button.select_location(class=location_class)
                    //         img.ui.tiny.inline.image(src="{{c.url image_id width=400 height=300 crop='pad'}}")
                    //         |#{title}
                    +array_edit key='tags' label='tags' icon='tags' direct=true
                    .ui.red.button.delete_task
                        i.remove.icon   
                        | delete
                
                
template(name='task_view')
    with current_doc
        .ui.stackable.padded.grid
            .three.column.row
                .column
                    // +parent_unit_button
                    a.ui.big.button.fly_left(href="/tasks")
                        // i.tasks.icon
                        +i name='tasks'
                        |tasks
                    .ui.inline.header
                        | #{title}
                        small task view
                    +image_view key='image_id' label='image' direct=true
                    div
                    a.ui.big.button.fly_right(href="/task/#{_id}/edit")
                        i.pencil.icon
                        |edit
                .column
                    +boolean_view key='has_user_assignment' label='has user assignment' direct=true
                    if has_user_assignment
                        each group_members
                            .ui.button.assign_member #{username}
                    +boolean_view key='has_minute_expectation' label='has minute expectation' direct=true
                    if has_minute_expectation
                        +number_view key='minute_expectation' label='time expectation (minutes)' direct=true
                    +boolean_view key='has_duedatetime' label='has due date/time' icon='calendar' direct=true
                    if has_duedatetime
                        +datetime_view key='due_datetime' label='due date/time' icon='calendar' direct=true
                    +number_view key='amount' label='amount (leave 0 for infinite)' direct=true
                    +boolean_view key='has_point_bounty' label='has point bounty' icon='hashtag' direct=true
                    if has_point_bounty
                        +number_view key='point_bounty' label='point_bounty' direct=true
                    // if unit_id 
                    //     +parent_unit_button
                        
                .column
                    +html_view key='description' label='description' direct=true
                    +array_view key='tags' label='tags' icon='tags' direct=true
                    if currentUser
                        .ui.button.record_work
                            |record work
                    .ui.header 
                        i.wrench.icon
                        |work
                    .ui.selection.animated.list
                        each task_work
                            a.item(href="/work/#{_id}") 
                                img.ui.tiny.inline.image(src="{{c.url image_id width=400 height=300 crop='pad'}}")
                                if before_image_id
                                    img.ui.tiny.inline.image(src="{{c.url before_image_id width=400 height=300 crop='pad'}}")
                                if before_image_id
                                    img.ui.tiny.inline.image(src="{{c.url after_image_id width=400 height=300 crop='pad'}}")
                                |#{when} #{_author_username}
                .column
                    +voting_full
                    +comments
                        
                        
                        
                        
template(name='work')
    .ui.stackable.padded.grid
        .four.wide.column
            .ui.inline.header 
                i.wrench.icon
                |work
            div
            .ui.inline.small.header 
                i.user.friends.icon
                |staff
            each picked_authors
                a.ui.blue.label.unpick_author
                    |#{this}
            each author_results
                if title
                    a.ui.basic.circular.small.link.label.pick_author
                        |#{title} 
                        small.ui.grey.text #{count}
            div
            .ui.inline.small.header 
                i.tasks.icon
                |task
            each picked_tasks
                a.ui.blue.label.unpick_task
                    |#{this}
            each task_results
                if title
                    a.ui.basic.circular.small.link.label.pick_task
                        |#{title} 
                        small.ui.grey.text #{count}
            div
            .ui.inline.small.header 
                i.marker.icon
                |location
            each picked_locations
                a.ui.blue.label.unpick_location
                    |#{this}
            each location_results
                if title
                    a.ui.basic.circular.small.link.label.pick_location
                        |#{title} 
                        small.ui.grey.text #{count}
            div
            .ui.inline.small.header 
                i.marker.icon
                |timestamp_tags
            each picked_timestamp_tags
                a.ui.blue.label.unpick_timestamp_tag
                    |#{this}
            each timestamp_tag_results
                if title
                    a.ui.basic.circular.small.link.label.pick_timestamp_tag
                        |#{title} 
                        small.ui.grey.text #{count}
        .twelve.wide.column
            // .ui.basic.button.add_work
            //     i.large.plus.icon
            //     |log work
            // .ui.basic.button.add_task
            //     i.large.plus.icon
            //     |task
            // each picked_sections
            //     button.ui.blue.compact.small.button.unpick_section(tabindex='0')
            //         //- i.remove.icon
            //         | #{this}
            // // div
            // +i name='clock' cl='ui inline mini image'
            // each sections
            //     button.ui.compact.basic.button.pick_section(tabindex="0" class=result_class title=count) #{title}
            //         //- small #{count}
            // // unless one_post
            span.sorting_row
                // +session_set key='view_users' value='grid' icon='th' 
                // +session_set key='view_users' value='list' icon='list'
                // +session_set key='sort_users_direction' value='-1' icon='chevron down'
                // +session_set key='sort_users_direction' value='1' icon='chevron up'
                // +session_set key='sort_users_key' value='points' icon='coins'
                // +session_set key='sort_users_key' value='created_date' icon='clock'
                // +session_set key='view_limit' value=1
                // +session_set key='view_limit' value=10
                // +session_set key='view_limit' value=20
                // +session_set key='view_limit' value=50

                
                i.large.sort.icon
                +set_sort_key key='price_usd' label='price' icon='money'
                +set_sort_key key='_timestamp' label='added' icon='clock'
                // +set_sort_key key='comment_count' label='comment count' icon='chat'
                // +set_sort_key key='views' label='views' icon='eye'
                // +set_sort_key key='points' label='points' icon='line chart'
                .ui.compact.icon.button.set_sort_direction(title='toggle sort direction')
                    if sorting_up
                        i.sort.amount.down.icon
                    else
                        i.sort.amount.up.icon
                |&nbsp;
                |&nbsp;
                // .ui.compact.menu
                //     .ui.simple.dropdown.item
                //         strong #{product_limit}
                //         i.dropdown.icon
                //         .menu
                        //   +set_product_limit amount=1
                           +set_product_limit amount=5
                           +set_product_limit amount=10
                            +set_product_limit amount=20
                // .ui.inline.small.header ryan: #{ryan_total}
                // .ui.inline.small.header eric: #{eric_total}
                .spacer 
                
            .ui.large.selection.animated.list.scrolling
                each work_list
                    a.item(href="/work/#{_id}")
                        .content
                            .ui.inline.small.header 
                                img.ui.tiny.inline.image(src="{{c.url staff_image_id width=400 height=300 crop='pad'}}")
                                |#{_author_username}: 
                            img.ui.tiny.inline.image(src="{{c.url work_task.image_id width=400 height=300 crop='pad'}}")
                            if before_image_id
                                img.ui.inline.tiny.image(src="{{c.url before_image_id width=400 height=300 crop='pad'}}")
                            if after_image_id
                                img.ui.inline.tiny.image(src="{{c.url after_image_id width=400 height=300 crop='pad'}}")
                            if image_id
                                img.ui.tiny.inline.image(src="{{c.url image_id width=400 height=300 crop='pad'}}")
                            .ui.inline.small.header 
                                |#{task_title}
                            .ui.inline.small.header 
                                img.ui.tiny.inline.image(src="{{c.url location_image_id width=400 height=300 crop='pad'}}")
                                |@#{location_title}
                            | #{when}
                            small ({{long_date _timestamp}})
                            |#{task_points}pts
                        // .content
                        //     +favorite_icon_toggle
                
                
                
template(name='work_edit')
    with current_doc
        .ui.stackable.padded.grid
            .row
                .six.wide.column
                    .ui.inline.small.header
                        i.pencil.icon
                        | #{title}
                        | work edit
                    with work_task
                        .ui.segment
                            img.ui.tiny.inline.image(src="{{c.url image_id width=200 height=200 gravity='face' crop='fill'}}")
                            .ui.inline.header 
                                |#{title}
                            |#{description}
                    .ui.grey.header 
                        i.clock.icon
                        |#{when}
                    // +text_edit key='title' label='title' direct=true
                    div
                    +textarea_edit key='notes' label='notes' direct=true
                    // if location_id
                    //     if image_id
                    .ui.hidden.divider
                    a.ui.massive.icon.fluid.green.button.submit_work(title='submit')
                        i.checkmark.big.icon
                .ten.wide.column
                    .ui.segment
                        .ui.header
                            i.image.icon
                            |image
                        +image_edit key='before_image_id' label='before image' direct=true capture="camera"
                        +image_edit key='after_image_id' label='after image' direct=true capture="camera"
                    .ui.inline.header 
                        i.red.marker.icon
                        |location
                    each task_locations
                        a.ui.circular.image.link.label.pick_location.zoomer(class=location_picker_class)
                            img.ui.image(src="{{c.url image_id width=200 height=200 gravity='face' crop='fill'}}")
                            | #{title}
                    .ui.red.small.fluid.button.delete_work
                        i.remove.icon   
                        | cancel
                    if in_dev
                        +print_this
                        
                
template(name='work_view')
    with current_doc
        .ui.stackable.padded.grid
            .row
                .four.wide.column
                    a.ui.basic.icon.button.fly_right(href="/work")
                        i.wrench.large.icon
                    .ui.inline.header
                        | #{title}
                        small work view
                    +image_view key='image_id' label='image' direct=true
                    div
                    a.ui.icon.button(href="/work/#{_id}/edit")
                        i.pencil.icon
                .eight.wide.column
                    a.zoomer(href="/user/#{_author_username}/")
                        img.ui.small.inline.image(src="{{c.url author.image_id width=200 height=200 gravity='face' crop='fill'}}")
                        .ui.large.inline.header #{_author_username} 
                    div
                    a.zoomer(href="/task/#{task_id}/")
                        img.ui.small.inline.image(src="{{c.url task_image_id width=200 height=200 gravity='face' crop='fill'}}")
                        .ui.inline.header 
                            |#{task_title}
                    div
                    a.zoomer(href="/location/#{location_id}/") 
                        img.ui.small.inline.image(src="{{c.url location_image_id width=200 height=200 gravity='face' crop='fill'}}")
                        .ui.inline.header @#{location_title}
                    .ui.header #{when}
                    div.scrolling
                        +html_view key='notes' label='directions' direct=true
                    // +array_view key='tags' label='tags' icon='tags' direct=true
                    +comments
                .four.wide.column
                    +voting_full
                    .ui.header 
                        i.checkmark.icon
                        |vouched by #{vouchers.count}
                    each vouchers
                        .ui.header #{username}
                    unless is_author
                        if vouched_for
                            .ui.button.vouch
                                i.checkmark.icon 
                                |vouch 
                        else
                            .ui.small.button.unvouch
                                |unvouch
                        
                    .ui.header #{task_points} pts earned
                    if in_dev 
                        +print_this
                                                