template(name='session_key_value_edit')
    .ui.button.set_key_value(class=set_key_value_class)
        if key_value_is 'key' 'sort_key'
            if session_is 'sort_key' value
                if sorting_up
                    i.sort.amount.down.icon
                else
                    i.sort.amount.up.icon
        if icon 
            +i name=icon cl='ui avatar image'
            // i.icon(class=icon)
        |#{label}
        
        
        
template(name='viewing_info')
    .ui.header 
        +i name='eye'
        |viewing info
    .ui.small.header 
        |viewers
    .ui.list 
        each read_user_ids
            +user_info
            // img.ui.avatar.image(src="{{c.url image_id width=300 height=300 gravity='face' crop='fill'}}")
    .ui.small.header 
        |#{views} views
    .ui.small.header 
        |last user viewed: {{med_date last_user_viewed_timestamp}}
        |last user viewed
    .ui.small.header 
        |last anon viewed: {{med_date last_anon_viewed_timestamp}}


template(name='publish_button')
    .ui.button.publish 
        |publish

template(name='session_icon_button')
    .ui.icon.circular.button.set_session_value(class=session_icon_button_class)
        +i name=icon

template(name='sort_direction_toggle')
    if session_is 'sort_direction' -1
        .ui.icon.compact.circular.button.toggle(title='toggle sort direction')
            i.sort.down.large.icon
            // +i name='sort-down'
    else
        .ui.icon.compact.circular.button.toggle(title='toggle sort direction')
            // +i name='sort-up'
            i.sort.up.large.icon


template(name='search_input')
    .ui.input(class=search_input_class)
        input.search_input(type='text' placeholder='search....')
template(name='sort_direction_button')

template(name='limit_menu')
    .ui.inline.small.grey.header
        |limit
    .ui.compact.menu
        .ui.simple.dropdown.item
            strong #{current_limit}
            i.dropdown.icon
            .menu
                +set_limit amount=1
                +set_limit amount=5
                +set_limit amount=10
                +set_limit amount=20


template(name='key_value_edit')
    .ui.button.set_key_value(class=calculated_class title=label)
        if icon 
            +i name=icon cl='ui avatar image'
            // i.large.icon(class=icon)
        if label
            |#{label}
        else 
            |#{value}
            
        
template(name='profile_key_value_edit')
    .ui.mini.circular.compact.secondary.basic.button.set_key_value.zoomer.invert(class=calculated_class title=label)
        if icon 
            +i name=icon cl='ui avatar image'
            // i.large.icon(class=icon)
        if label
            |#{label}
        // else 
        //     |#{value}
            
        
        
template(name='doc_array_toggle')
    // if currentUser
    .ui.button.toggle(class=doc_array_toggle_class title=label)
        if in_list
            if remove_icon
                i.large.icon(class=remove_icon)
            |#{remove_label}
        else
            if add_icon
                i.large.icon(class=add_icon)
            |#{add_label}
        |#{label}
    //- each list_users
        //-     +user_info
        
template(name='session_toggle') 
    .ui.icon.large.circular.button.toggle_session_var.zoomer(class=session_toggle_class title=key)
        i.large.icon(class=icon)
        // if on
        //     i.checkmark.icon
        //     // |#{key}
        // else    
        //     // |#{key}
        
        
        
        
template(name='bookmark_button')
    if currentUser
        .ui.icon.compact.button.toggle_bookmark(class=bookmark_button_class title=label)
            if is_bookmarked
                // |bookmarked
                i.red.bookmark.large.icon
                // - i.large.icon(class=remove_icon)
            else
                // |bookmark
                i.large.bookmark.icon
                //- i.large.icon(class=add_icon)
        //- each list_users
        //-     +user_info

                                
                                
                                
template(name='reviews')
    .ui.header
        +i name='popular-topic' cl='ui inline image'
        |reviews
    div
    // if currentUser
    .ui.fluid.icon.large.input
        i.plus.icon
    .ui.reviews
        each doc_reviews
            .comment
                .content
                    .ui.header #{body}
                    .meta #{when}
                        |by 
                        // a(href="/user/#{author.username}") #{author.first_name} #{author.last_name}
                            // if currentUser
                        +voting_small
                        // if can_edit
                        //     +remove_button


template(name='viewing')
    div
    .ui.header #{views}
    // // if currentUser
    //     unless viewed_by
    //         .ui.icon.button.mark_read
    //             i.eye.icon
    //     else 
    //         if is_dev
    //             .ui.icon.button.mark_unread
    //                 i.cancel.icon
    // .ui.inline.header viewed by
    // each read_ids
    //     +user_info


template(name='user_info')
    with user_from_id this
        a.ui.basic.large.link.basic.label(href="/user/#{username}")
            img.ui.avatar.inline.image(src="{{c.url image_id width=200 height=200 gravity='face' crop='fill'}}")
            |#{username}
    // .ui.header #{this}


template(name='session_boolean_toggle')
    .ui.compact.button.toggle_session_key(class=calculated_class)
        +i name=icon cl='ui avatar image'
        |#{label}
        //- if icon_view 
        //- else 
            if label
                |#{label}
            else 
                |#{value}


template(name='eft_home_picker')
    .ui.compact.circular.secondary.basic.button.toggle_eft(class=eft_button_class)
        // with ../
        if icon
            +i name=icon cl='ui mini inline image' color=stripped_icon_color
        // if icon_view
        // i.icon(class=icon)
        // else
        |#{title}
        
//         .ui.compact.circular.secondary.basic.button.pick_model.zoomer(class=button_class)
//             +i name=icon color=color cl='ui mini inline image'
                
template(name='session_set')
    .ui.compact.circular.secondary.basic.button.set_session_value(class=calculated_class)
        // with ../
        if icon
            +i name=icon cl='ui image' color=color
        // if icon_view
        // i.icon(class=icon)
        // else
        |#{title}
                
                
template(name='set_sort_key')
    .ui.circular.compact.button.set_sort(class=sort_button_class)
        if color
            .ui.basic.label(class=color) #{label}
        else 
            if emoji
                em(data-emoji=emoji)
            else if icon
                i.icon(class=icon)
            |#{label}


// template(name='set_sort_key')
//     .item.set_sort
//         if color
//             .ui.basic.label(class=color) #{label}
//         else 
//             if emoji
//                 em(data-emoji=emoji)
//             else if icon
//                 i.icon(class=icon)
//             |#{label}

template(name='goto_model')
    if is_staff
        a.goto_model(href="/m/#{slug}" title="goto #{slug}")
            i.external.blue.icon
            //- +i name='external-link'

template(name='events_column')
    .ui.accordion
        h4.active.title
            // +i name='edit-property' cl='ui inline image'
            //- i.rss.icon
            | log
            i.dropdown.icon
        .active.content
            .ui.feed
                each log_events
                    .event
                        .basic.label
                            img.ui.rounded.image(src="{{c.url object.image width=400 height=400 gravity='face' crop='fill'}}")
                        .content
                            .summary
                                |#{body}
                                .date
                                    |#{when}
                                if is_dev
                                    +remove_button




template(name='follow')
    .ui.segment
        .ui.header
            i.user.plus.icon
            |follow
        +user_list_toggle key='follower_ids' icon='rss' add_label='Follow' remove_label='Unfollow' color='black'


template(name='toggle_edit')
    .ui.button.toggle_edit
        i.pencil.icon

template(name='user_list_info')
    a.ui.button.item(href="/user/#{user._id}/view")
        img.ui.avatar.image(src=user.profile.profilePic title=name)
        |#{user.profile.name}
        +user_status user

//- template(name='call_watson')
//-     .ui.button.autotag
//-         //- i.chess.icon
//-         +ismall name='dna-helix'
//-         |call watson

template(name='view_full_button')
    a.ui.icon.button(href="/view/#{_id}" class=cl data-tooltip='View Full')
        i.double.icon
        |view

template(name='user_status')
    if online 
        // .ui.basic.label(class='{{labelClass}}') 
        .ui.empty.basic.label(title='online')
        // img.ui.avatar.image(src="https://img.icons8.com/connection-user_status-on/color/48" title='Online' width="48" height="48")
        // |Online
    else if idle
        .ui.empty.yellow.basic.label(title='idle')
        // .ui.basic.label(class='{{labelClass}}') Idle
    // else 
    //     |Offline

// template(name='user_card')
//     with user
//         .ui.card
//             //- if is_staff
//             a.image(href="/user/#{username}")
//                 img.ui.tiny.image(src="{{c.url image_id width=200 height=200 gravity='face' crop='fill'}}")
//             .content    
//                 .header 
//                     a.header(href="/user/#{username}") #{name} 
//                     .meta @#{username}
//                     if is_admin
//                         div
//                         +user_email
//                 //- +emails_edit    
//         //- +user_status user


template(name='user_email')
    .ui.small.inline.header #{email_address}
    if email_verified
        .ui.basic.label 
            i.green.checkmark.icon
            |verified
    else
        .ui.orange.basic.label 
            i.ban.icon
            |unverified
        

template(name='big_user_card')
    with user
        //- .ui.card
        //- .ui.card(class=resident_status_class)
        .ui.card
            .image
                img.ui.rounded.image(src="{{c.url image_id width=300 height=300 gravity='face' crop='fill'}}")
            .content
                a.header(href="/user/#{username}")
                     |#{first_name} #{last_name} 
                    //- .meta @#{username}
                    //- +array_view key='tags' label='Tags' direct=true
            if is_staff
                .content
                    +array_view key='roles' direct=true
                        
template(name='user_button')
    a.ui.compact.button(href="/user/#{user.username}/")
        if user.kiosk_photo
            img.ui.avatar.inline.image(src="{{c.url user.kiosk_photo width=300 height=300 gravity='face' crop='fill'}}")
        else if user.image_id
            img.ui.avatar.inline.image(src="{{c.url user.image_id width=300 height=100 gravity='face' crop='fill'}}")
        //- .visible.content
        |#{user.first_name} #{user.last_name}
        //- |@#{user.username}
        +user_status user
        //- .hidden.content
        //-     |view
        //-     i.right.chevron.icon


template(name='username_info')
    .ui.small.compact.button.goto_profile
        if is_member
            img.ui.avatar.image(src="{{c.url user.image_id width=100}}")
        else if user.kiosk_photo
            img.ui.avatar.image(src="{{c.url user.kiosk_photo width=100}}")
        else if user.image_id
            img.ui.avatar.image(src="{{c.url user.image_id width=100}}")
        |#{user.name}
        //- |@#{user.username}
        +user_status user


template(name='role_editor')
    each roles
        .ui.button #{this}

template(name='author_info')
    with author
        a.ui.compact.basic.tertiary.button(href="/user/#{username}")
            if image_id
                img.ui.avatar.image(src="{{c.url image_id width=150 height=150 gravity='face' crop='fill'}}")
            |by #{first_name} #{last_name}
    .ui.basic.label by #{_author_username}

template(name='creation_info')
    // i.grey.clock.icon
    |#{when}

template(name='_timestamp_long')
    .ui.large.basic.basic.label 
        i.grey.clock.icon
        small added 
        strong #{when}


template(name='user_list_toggle')
    if currentUser
        .ui.icon.compact.button.toggle(class=user_list_toggle_class title=label)
            if in_list
                i.large.icon(class=remove_icon)
            else
                i.large.icon(class=add_icon)
            //- +ismall name=icon
            //- |#{label}
        //- each list_users
        //-     +user_info


template(name='voting')
    .ui.icon.button.tertiary.upvote
        i.thumbs.up.outline.icon(class=upvote_class)
    .ui.popup 
        .ui.list
            each upvoters 
                .item
                    img.ui.avatar.image(src="{{c.url image_id width=200 height=200}}")
                    |#{username}
    //- each upvoter_ids
    //-     +user_info
    .ui.icon.button.tertiary.downvote
        i.thumbs.down.outline.icon(class=downvote_class)
    .ui.popup 
        .ui.list
            each downvoters 
                .item
                    img.ui.avatar.image(src="{{c.url image_id width=200 height=200}}")
                    |#{username}
    //- each downvoter_ids
    //-     +user_info
    // if points
    //     strong #{points} pts
    // if anon_points
    //     strong #{anon_points} anon pts
    

template(name='voting_small')
    if points
        strong #{points}
    i.thumbs.up.link.icon.upvote(class=upvote_class)
    //- each upvoter_ids
    //-     +user_info
    i.thumbs.down.link.icon.downvote(class=downvote_class)
    //- each downvoter_ids
    //-     +user_info



template(name='voting_full')
    // +ismall name='elections'
    // .ui.inline.header 
    //     |voting
    .ui.large.icon.compact.basic.button.upvote(title='upvote')
        i.thumbs.up.outline.icon(class=upvote_class)
        //- |like
    .ui.large.icon.compact.basic.button.downvote(title='downvote')
        i.thumbs.down.outline.icon(class=downvote_class)
        //- |dislike
    if points
        .ui.large.basic.basic.label(title='points') #{points}pts
        if anon_points
            .ui.large.basic.label(title='anon points') #{anon_points} anon pts
    if upvoter_ids
        .ui.small.inline.grey.header 
            i.thumbs.up.outline.icon
            |upvoters
        each upvoter_ids
            +user_info
    if downvoter_ids
        .ui.small.inline.grey.header 
            i.thumbs.down.outline.icon
            |downvoters
        each downvoter_ids
            +user_info



template(name='view_button')
    a.ui.icon.compact.button.view(title='view' href="/m/#{model}/#{_id}/view")
        //- i.right.chevron.large.icon
        +i name='chevron right' cl='ui mini inline image'


template(name='remove_button')
    .ui.icon.basic.button.remove_doc(title='delete')
        i.remove.red.icon
        //- |Delete

template(name='remove_icon')
    i.remove.icon.remove_doc(title='delete')
    //- |Delete

template(name='add_button')
    a.ui.large.button.add(title="add #{model}")
        //- |#{model.icon}
        if model.icon
            //- i.icon(class=icon)
            +ismall name=model.icon cl='ui inline image'
        else 
            i.plus.icon
        if label
            |#{label}
        //- |#{model}


template(name='roles')
    +model_picker model='role'
template(name='skills')
    +model_picker model='skill'
template(name='resources')
    +model_picker model='resource'
template(name='tasks')
    +model_picker model='task'
template(name='organizations')
    +model_picker model='organization'
template(name='groups')
    +model_picker model='group'
template(name='projects')
    +model_picker model='project'
template(name='events')
    +model_picker model='event'



template(name='edit_button')
    a.ui.button.icon.edit(title='Edit' href="/m/#{model}/#{_id}/edit")
        i.blue.pencil.icon
        |edit


template(name='model_picker')
    .ui.segment
        .ui.header 
            +i name=icon
            | #{model} picker
        if can_edit 
            with current_delta 
                +boolean_edit key='edit_mode' label='edit' icon='cog' direct=true
        // if is_admin
        unless picked_models
            if current_delta.edit_mode 
                .ui.icon.large.input 
                    if model_search_value
                        i.large.red.remove.link.icon.zoomer.clear_search
                    else 
                        i.search.icon
                    input.model_search(type='text' placeholder='search' value=model_search_value)
                if model_results
                    .ui.selection.link.animated.list
                        each model_results
                            .ui.item.pick_model
                                img.ui.avatar.image(src="{{c.url image_id width=300 height=300 gravity='face' crop='fill'}}")
                                |#{title}
                // else if model_search_value
                .ui.button.create_model
                    |add #{model_search_value}
            
        if picked_models
            .ui.header 
                // |#{picked_models.length}
                |picked model
            .ui.list.smallscroll
                with picked_models
                    .ui.horizontal.card
                        img.ui.image(src="{{c.url image_id width=300 height=300 gravity='face' crop='fill'}}")
                        .content 
                            .header #{title}
                            if cd.edit_mode
                                i.remove.link.circular.red.icon.zoomer.remove_model
                        .extra.content
                            .right.floated
                                +author_info 
                            .left.floated
                                +creation_info
template(name='title')
    +print_this
    .ui.inline.header title: #{title}

template(name='tags')
    .ui.inline.header tags 
    each tags 
        .ui.basic.label #{this}
        
// template(name='roles')    
//     .ui.header 
//         +i name='shield'
//         | roles
//     // if is_admin
//     .ui.icon.large.input 
//         if role_search_value
//             i.large.red.remove.link.icon.zoomer.clear_search
//         else 
//             i.search.icon
//         input.role_search(type='text' placeholder='search' value=role_search_value)
//     if role_results
//         .ui.selection.link.animated.list
//             each role_results
//                 .ui.item.pick_role.zoomer
//                     img.ui.avatar.image(src="{{c.url image_id width=300 height=300 gravity='face' crop='fill'}}")
//                     |#{title}
//     // else if role_search_value
//     .ui.button.create_role
//         |add #{role_search_value}
    
//     if product_roles
//         .ui.header 
//             |#{product_roles.length}
//             |picked roles
//         .ui.list
//             each product_roles
//                 .ui.item
//                     img.ui.avatar.image(src="{{c.url image_id width=300 height=300 gravity='face' crop='fill'}}")
//                     a.goto_doc #{title}
//                     i.remove.link.icon.zoomer.remove_role
        
template(name='_author_id')   
    // .ui.inline.header 
    //     i.user.icon
    //     |author
        // |#{_author_id}
    +author_info
    with _author
        +user_card
    
template(name='_author_username')   
    .ui.header 
        i.user.icon
        |author
        |#{_author_username}
        
        
template(name='icon')
    +i name=icon
    .ui.inline.header #{icon}
        
template(name='_timestamp')
    // +when
    .ui.basic.label #{_timestamp} #{when}
        
template(name='model')
    .ui.inline.header model 
    .ui.big.basic.label
        i.database.icon
        |#{model}
    if model_temp_exists
        +Template.dynamic template=model_temp




                    
                    
template(name='task_picker')
    .ui.header 
        +i name='tasks'
        | tasks
    // if is_admin
    .ui.icon.large.input 
        if task_search_value
            i.large.red.remove.link.icon.zoomer.clear_search
        else 
            i.search.icon
        input.task_search(type='text' placeholder='search' value=task_search_value)
    if task_results
        .ui.selection.link.animated.list
            each task_results
                .ui.item.pick_task.zoomer
                    img.ui.avatar.image(src="{{c.url image_id width=300 height=300 gravity='face' crop='fill'}}")
                    |#{title}
    // else if task_search_value
    .ui.button.create_task
        |add #{task_search_value}
    
    if product_tasks
        .ui.header 
            |#{product_tasks.length}
            |picked tasks
        .ui.list
            each product_tasks
                .ui.item
                    img.ui.avatar.image(src="{{c.url image_id width=300 height=300 gravity='face' crop='fill'}}")
                    |#{title}
                    i.remove.link.icon.zoomer.remove_task
                    
                    
template(name='badge_picker')
    .ui.header 
        +i name='shield'
        | badges
    // if is_admin
    .ui.icon.large.input 
        if badge_search_value
            i.large.red.remove.link.icon.zoomer.clear_search
        else 
            i.search.icon
        input.badge_search(type='text' placeholder='search' value=badge_search_value)
    if badge_results
        .ui.selection.link.animated.list
            each badge_results
                .ui.item.pick_badge.zoomer
                    img.ui.avatar.image(src="{{c.url image_id width=300 height=300 gravity='face' crop='fill'}}")
                    |#{title}
    // else if badge_search_value
    .ui.button.create_badge
        |add #{badge_search_value}
    
    if product_badges
        .ui.header 
            |#{product_badges.length}
            |picked badges
        .ui.list
            each product_badges
                .ui.item
                    img.ui.avatar.image(src="{{c.url image_id width=300 height=300 gravity='face' crop='fill'}}")
                    |#{title}
                    i.remove.link.icon.zoomer.remove_badge

// template(name='events')
//     .ui.header 
//         +i name='shield'
//         | events
//     // if is_admin
//     .ui.icon.large.input 
//         if event_search_value
//             i.large.red.remove.link.icon.zoomer.clear_search
//         else 
//             i.search.icon
//         input.event_search(type='text' placeholder='search' value=event_search_value)
//     if event_results
//         .ui.selection.link.animated.list
//             each event_results
//                 .ui.item.pick_event.zoomer
//                     img.ui.avatar.image(src="{{c.url image_id width=300 height=300 gravity='face' crop='fill'}}")
//                     |#{title}
//     // else if event_search_value
//     .ui.button.create_event
//         |add #{event_search_value}
    
//     if product_events
//         .ui.header 
//             |#{product_events.length}
//             |picked events
//         .ui.list
//             each product_events
//                 .ui.item
//                     img.ui.avatar.image(src="{{c.url image_id width=300 height=300 gravity='face' crop='fill'}}")
//                     |#{title}
//                     i.remove.link.icon.zoomer.remove_event


template(name='save_button')
    a.ui.button.large.icon.save(title='Save' href="/m/#{model}/#{_id}/view")
        i.checkmark.icon
        |save

template(name='toggle_button')
    .ui.icon.toggle.button(title=label)
        i.icon(class=icon)
    each picked
        |#{username}


template(name='view_user_button')
    .view_user.view(title="view #{username}")
        i.play.icon
        |View

template(name='add_model_button')
    if currentUser
        .ui.icon.button.add_model_doc(title="add #{model}")
            i.plus.large.icon
            if label
                |#{model}


            
template(name='email_validation_check')
    //- if email_verified
    //-     .ui.large.button
    //-         i.checkmark.icon
    //-         |email validated
    unless email_verified
        .ui.fluid.button.send_verification
            //- i.user.shield.icon
            //- +i name='user-shield' cl='ui inline image'
            |resend verification email
        if times
            .ui.basic.label
                |#{times}
            //- else
                //- |#{times}x sent
        if is_staff
            .ui.button.toggle_email_verified
                |mark email verified
        

template(name='print_this')
    .ui.icon.basic.button.print
        i.orange.code.icon

template(name='online_allies')
    .ui.header 
        +i name='marker'
        |online allies
    .ui.selectable.animated.list.smallscroll
        each user_docs 
            a.item.fly_right(href="/user/#{username}")
                img.ui.avatar.image(src="{{c.url image_id width=400 height=400}}")
                |#{username}
                if tags 
                    each tags 
                        .ui.basic.basic.label #{this}
                        
template(name='online_users')
    .ui.header 
        // +i name='conference-background-selected' color='83DFF4'
        // |online users
    //.ui.selectable.animated.list.smallscroll
    .ui.fluid.menu.hscroll.secondary
        each online_user_docs 
            a.item.fly_right(href="/user/#{username}")
                img.ui.circular.tiny.image(src="{{c.url image_id width=400 height=400 gravity='face' crop='fill'}}")
                //click needs to pop up modal of user page
                
                // make sure comments aren't indented under code, it'll break
            div
                |#{username}
                if tags 
                    each tags 
                        .ui.basic.basic.label #{this}

template(name='open_requests')
    .ui.header open requests
    each open_requests 
        a.ui.fluid.card(href="/request/#{_id}")
            .content 
                .header #{title}
                .description
                    .ui.header #{when}
                            
                    
                    
template(name='latest_activity')
    .ui.header 
        +i name='clock'
        |latest activity
    .ui.selection.animated.list
        each latest_docs 
            a.item(href="/#{model}/#{_id}") 
                img.ui.avatar.image(src="{{c.url image_id width=200 height=200 gravity='face' crop='fill'}}")
                .content
                    .header #{title}
                    .description
                        |{{from_now _updated_timestamp}}