template(name='tasks')
    .ui.stackable.padded.grid
        .four.wide.column
            .ui.inline.header 
                // i.tasks.icon
                +i name='tasks'
                |tasks
            div
            +add_model_button model='task'
            .ui.inline.small.header 
                i.user.friends.icon
                |authors
            each picked_authors
                a.ui.blue.label.unpick_author
                    |#{this}
            each author_results
                if title
                    a.ui.basic.circular.small.link.label.pick_author
                        |#{title} 
                        small.ui.grey.text #{count}
            div
            .ui.small.inline.header
                i.tags.icon
                |tags
            each picked_tags
                a.ui.blue.label.unpick_task
                    |#{this}
            each task_tag_results
                if title
                    a.ui.basic.circular.small.link.label.pick_task
                        |#{title} 
                        small.ui.grey.text #{count}
            div
            .ui.small.inline.header
                i.fire.icon
                |groups
            each picked_task_groups
                a.ui.blue.label.unpick_group
                    |#{this}
            each task_group_results
                if title
                    a.ui.basic.circular.small.link.label.pick_group
                        |#{title} 
                        small.ui.grey.text #{count}
        .twelve.wide.column
            span.sorting_row
                +search_input model='task' field='title'
                +session_set key='view_users' value='grid' icon='th' 
                +session_set key='view_users' value='list' icon='list'
                +session_set key='sort_users_direction' value='-1' icon='chevron down'
                +session_set key='sort_users_direction' value='1' icon='chevron up'
                +session_set key='sort_users_key' value='points' icon='coins'
                +session_set key='sort_users_key' value='created_date' icon='clock'
                +session_set key='view_limit' value=1
                +session_set key='view_limit' value=10
                +session_set key='view_limit' value=20
                +session_set key='view_limit' value=50
                    
                
                i.large.sort.icon
                +set_sort_key key='comment_count' label='comment count' icon='chat'
                +set_sort_key key='views' label='views' icon='eye'
                +set_sort_key key='points' label='points' icon='line chart'
                +toggle_sort_direction_button
                |&nbsp;
                |&nbsp;
                .spacer 
        
            span.ui.doubling.cards.scrolling
                each task_docs
                    +task_card
                    
                    
template(name='my_tasks')
    .ui.header my tasks
                    
                    
                    
template(name='toggle_sort_direction_button')
    .ui.compact.icon.button.set_sort_direction(title='toggle sort direction')
        if sorting_up
            i.sort.amount.down.icon
        else
            i.sort.amount.up.icon

                    
                    
template(name='task_card')
    .ui.link.card.fly_right
        a(href="/task/#{_id}") 
            img.ui.image(src="{{c.url image_id width=400 height=300 crop='pad'}}")
        a.content(href="/task/#{_id}") 
            .ui.header 
                if complete 
                    i.large.green.checkmark.icon
                |#{title}
            .ui.inline.header #{when}
            |!{description}
            .ui.inline.header #{points}pts
            each tags
                .ui.small.basic.label #{this}
            +author_info
            
            
                
                
template(name='task_edit')
    .ui.stackable.padded.grid
        .three.column.row
            .column
                .ui.inline.header
                    i.pencil.icon
                    | #{title}
                    small task
                a.ui.fluid.large.icon.green.button.fly_left(href="/task/#{_id}/" title='save product')
                    i.checkmark.big.icon
                +text_edit key='title' label='title' direct=true
                +image_edit key='image_id' label='image' direct=true
                +role_picker key='image_id' label='image' direct=true
                div
                +boolean_edit key='complete' label='complete' direct=true
                unless complete
                    .ui.button.mark_complete
                        i.checkmark.icon
                        |mark complete
                if complete
                    .ui.header 
                        i.green.checkmark.icon
                        |complete
                        |{{from_now complete_timestamp}}
                        |{{long_date complete_timestamp}}
                // +boolean_edit key='has_user_assignment' label='has user assignment' direct=true
                // if has_user_assignment
                each group_members
                    .ui.button.assign_member #{username}
                div
                // +boolean_edit key='has_minute_expectation' label='has minute expectation' direct=true
                // div
                // if has_minute_expectation
                +number_edit key='minute_expectation' label='time expectation (minutes)' direct=true
                div
                // +boolean_edit key='has_duedatetime' label='has due date/time' icon='calendar' direct=true
                div
                +model_picker model='project' icon='project'
            .column
                // if has_duedatetime
                +datetime_edit key='due_datetime' label='due date/time' icon='calendar' direct=true
                // +number_edit key='amount' label='amount (leave 0 for infinite)' direct=true
                // div
                // +boolean_edit key='has_point_bounty' label='has point bounty' icon='hashtag' direct=true
                // div
                // if has_point_bounty
                +number_edit key='point_bounty' label='point bounty' direct=true icon='coins'
                div
                div
                +single_user_edit key='user_assignment' label='user assignment' icon='user' direct=true
                // +boolean_edit key='has_subgroup_specification' label='has specific subgroup' icon='users' direct=true
                div
                .ui.header
                    i.red.marker.icon
                    |location
                +text_edit key='location' 
                +geolocate_button

                // .ui.header     
                //     i.users.icon
                //     |subgroup availability
                // each current_subgroups
                //     .ui.button.select_subgroup(class=subgroup_class)
                //         img.ui.tiny.inline.image(src="{{c.url image_id width=400 height=300 crop='pad'}}")
                //         |#{title}
                // +number_edit key='amount' label='amount (leave 0 for infinite)' direct=true
            .column
                +html_edit key='description' label='description' direct=true
                // .ui.header     
                //     i.large.building.icon
                //     |associated unit
                // if selected_unit
                //     .ui.header #{title}
                // each units
                //     .ui.button.select_location(class=location_class)
                //         img.ui.tiny.inline.image(src="{{c.url image_id width=400 height=300 crop='pad'}}")
                //         |#{title}
                +array_edit key='tags' label='tags' icon='tags' direct=true
                .ui.red.button.delete_task
                    i.remove.icon   
                    | delete
            
                
template(name='task_view')
    .ui.stackable.padded.grid
        .three.column.row
            .column
                // +parent_unit_button
                a.ui.big.button.fly_left(href="/tasks")
                    // i.tasks.icon
                    +i name='tasks'
                    |tasks
                .ui.inline.header
                    | #{title}
                    small task view
                +image_view key='image_id' label='image' direct=true
                div
                a.ui.big.button.fly_right(href="/task/#{_id}/edit")
                    i.pencil.icon
                    |edit
            .column
                +boolean_view key='has_user_assignment' label='has user assignment' direct=true
                if has_user_assignment
                    each group_members
                        .ui.button.assign_member #{username}
                +boolean_view key='has_minute_expectation' label='has minute expectation' direct=true
                if has_minute_expectation
                    +number_view key='minute_expectation' label='time expectation (minutes)' direct=true
                +boolean_view key='has_duedatetime' label='has due date/time' icon='calendar' direct=true
                if has_duedatetime
                    +datetime_view key='due_datetime' label='due date/time' icon='calendar' direct=true
                +number_view key='amount' label='amount (leave 0 for infinite)' direct=true
                +boolean_view key='has_point_bounty' label='has point bounty' icon='hashtag' direct=true
                if has_point_bounty
                    +number_view key='point_bounty' label='point_bounty' direct=true
                // if unit_id 
                //     +parent_unit_button
                    
            .column
                +html_view key='description' label='description' direct=true
                +array_view key='tags' label='tags' icon='tags' direct=true
                if currentUser
                    .ui.button.record_work
                        |record work
                .ui.header 
                    i.wrench.icon
                    |work
                .ui.selection.animated.list
                    each task_work
                        a.item(href="/work/#{_id}") 
                            img.ui.tiny.inline.image(src="{{c.url image_id width=400 height=300 crop='pad'}}")
                            if before_image_id
                                img.ui.tiny.inline.image(src="{{c.url before_image_id width=400 height=300 crop='pad'}}")
                            if before_image_id
                                img.ui.tiny.inline.image(src="{{c.url after_image_id width=400 height=300 crop='pad'}}")
                            |#{when} #{_author_username}
            .column
                +voting_full
                +comments
                        
                        
                        
                        
template(name='work')
    .ui.stackable.padded.grid
        .four.wide.column
            .ui.inline.header 
                i.wrench.icon
                |work
            div
            .ui.inline.small.header 
                i.user.friends.icon
                |staff
            each picked_authors
                a.ui.blue.label.unpick_author
                    |#{this}
            each author_results
                if title
                    a.ui.basic.circular.small.link.label.pick_author
                        |#{title} 
                        small.ui.grey.text #{count}
            div
            .ui.inline.small.header 
                i.tasks.icon
                |task
            each picked_tasks
                a.ui.blue.label.unpick_task
                    |#{this}
            each task_results
                if title
                    a.ui.basic.circular.small.link.label.pick_task
                        |#{title} 
                        small.ui.grey.text #{count}
            div
            .ui.inline.small.header 
                i.marker.icon
                |location
            each picked_locations
                a.ui.blue.label.unpick_location
                    |#{this}
            each location_results
                if title
                    a.ui.basic.circular.small.link.label.pick_location
                        |#{title} 
                        small.ui.grey.text #{count}
            div
            .ui.inline.small.header 
                i.marker.icon
                |timestamp_tags
            each picked_timestamp_tags
                a.ui.blue.label.unpick_timestamp_tag
                    |#{this}
            each timestamp_tag_results
                if title
                    a.ui.basic.circular.small.link.label.pick_timestamp_tag
                        |#{title} 
                        small.ui.grey.text #{count}
        .twelve.wide.column
            // .ui.basic.button.add_work
            //     i.large.plus.icon
            //     |log work
            // .ui.basic.button.add_task
            //     i.large.plus.icon
            //     |task
            // each picked_sections
            //     button.ui.blue.compact.small.button.unpick_section(tabindex='0')
            //         //- i.remove.icon
            //         | #{this}
            // // div
            // +i name='clock' cl='ui inline mini image'
            // each sections
            //     button.ui.compact.basic.button.pick_section(tabindex="0" class=result_class title=count) #{title}
            //         //- small #{count}
            // // unless one_post
            span.sorting_row
                // +session_set key='view_users' value='grid' icon='th' 
                // +session_set key='view_users' value='list' icon='list'
                // +session_set key='sort_users_direction' value='-1' icon='chevron down'
                // +session_set key='sort_users_direction' value='1' icon='chevron up'
                // +session_set key='sort_users_key' value='points' icon='coins'
                // +session_set key='sort_users_key' value='created_date' icon='clock'
                // +session_set key='view_limit' value=1
                // +session_set key='view_limit' value=10
                // +session_set key='view_limit' value=20
                // +session_set key='view_limit' value=50

                
                i.large.sort.icon
                +set_sort_key key='price_usd' label='price' icon='money'
                +set_sort_key key='_timestamp' label='added' icon='clock'
                // +set_sort_key key='comment_count' label='comment count' icon='chat'
                // +set_sort_key key='views' label='views' icon='eye'
                // +set_sort_key key='points' label='points' icon='line chart'
                .ui.compact.icon.button.set_sort_direction(title='toggle sort direction')
                    if sorting_up
                        i.sort.amount.down.icon
                    else
                        i.sort.amount.up.icon
                |&nbsp;
                |&nbsp;
                // .ui.compact.menu
                //     .ui.simple.dropdown.item
                //         strong #{product_limit}
                //         i.dropdown.icon
                //         .menu
                        //   +set_product_limit amount=1
                           +set_product_limit amount=5
                           +set_product_limit amount=10
                            +set_product_limit amount=20
                // .ui.inline.small.header ryan: #{ryan_total}
                // .ui.inline.small.header eric: #{eric_total}
                .spacer 
                
            .ui.large.selection.animated.list.scrolling
                each work_list
                    a.item(href="/work/#{_id}")
                        .content
                            .ui.inline.small.header 
                                img.ui.tiny.inline.image(src="{{c.url staff_image_id width=400 height=300 crop='pad'}}")
                                |#{_author_username}: 
                            img.ui.tiny.inline.image(src="{{c.url work_task.image_id width=400 height=300 crop='pad'}}")
                            if before_image_id
                                img.ui.inline.tiny.image(src="{{c.url before_image_id width=400 height=300 crop='pad'}}")
                            if after_image_id
                                img.ui.inline.tiny.image(src="{{c.url after_image_id width=400 height=300 crop='pad'}}")
                            if image_id
                                img.ui.tiny.inline.image(src="{{c.url image_id width=400 height=300 crop='pad'}}")
                            .ui.inline.small.header 
                                |#{task_title}
                            .ui.inline.small.header 
                                img.ui.tiny.inline.image(src="{{c.url location_image_id width=400 height=300 crop='pad'}}")
                                |@#{location_title}
                            | #{when}
                            small ({{long_date _timestamp}})
                            |#{task_points}pts
                        // .content
                        //     +favorite_icon_toggle
                
                
                
template(name='work_edit')
    with current_doc
        .ui.stackable.padded.grid
            .row
                .six.wide.column
                    .ui.inline.small.header
                        i.pencil.icon
                        | #{title}
                        | work edit
                    with work_task
                        .ui.segment
                            img.ui.tiny.inline.image(src="{{c.url image_id width=200 height=200 gravity='face' crop='fill'}}")
                            .ui.inline.header 
                                |#{title}
                            |#{description}
                    .ui.grey.header 
                        i.clock.icon
                        |#{when}
                    // +text_edit key='title' label='title' direct=true
                    div
                    +textarea_edit key='notes' label='notes' direct=true
                    // if location_id
                    //     if image_id
                    .ui.hidden.divider
                    a.ui.massive.icon.fluid.green.button.submit_work(title='submit')
                        i.checkmark.big.icon
                .ten.wide.column
                    .ui.segment
                        .ui.header
                            i.image.icon
                            |image
                        +image_edit key='before_image_id' label='before image' direct=true capture="camera"
                        +image_edit key='after_image_id' label='after image' direct=true capture="camera"
                    .ui.inline.header 
                        i.red.marker.icon
                        |location
                    each task_locations
                        a.ui.circular.image.link.label.pick_location.zoomer(class=location_picker_class)
                            img.ui.image(src="{{c.url image_id width=200 height=200 gravity='face' crop='fill'}}")
                            | #{title}
                    .ui.red.small.fluid.button.delete_work
                        i.remove.icon   
                        | cancel
                    if in_dev
                        +print_this
                        
                
template(name='work_view')
    with current_doc
        .ui.stackable.padded.grid
            .row
                .four.wide.column
                    a.ui.basic.icon.button.fly_right(href="/work")
                        i.wrench.large.icon
                    .ui.inline.header
                        | #{title}
                        small work view
                    +image_view key='image_id' label='image' direct=true
                    div
                    a.ui.icon.button(href="/work/#{_id}/edit")
                        i.pencil.icon
                .eight.wide.column
                    a.zoomer(href="/user/#{_author_username}/")
                        img.ui.small.inline.image(src="{{c.url author.image_id width=200 height=200 gravity='face' crop='fill'}}")
                        .ui.large.inline.header #{_author_username} 
                    div
                    a.zoomer(href="/task/#{task_id}/")
                        img.ui.small.inline.image(src="{{c.url task_image_id width=200 height=200 gravity='face' crop='fill'}}")
                        .ui.inline.header 
                            |#{task_title}
                    div
                    a.zoomer(href="/location/#{location_id}/") 
                        img.ui.small.inline.image(src="{{c.url location_image_id width=200 height=200 gravity='face' crop='fill'}}")
                        .ui.inline.header @#{location_title}
                    .ui.header #{when}
                    div.scrolling
                        +html_view key='notes' label='directions' direct=true
                    // +array_view key='tags' label='tags' icon='tags' direct=true
                    +comments
                .four.wide.column
                    +voting_full
                    .ui.header 
                        i.checkmark.icon
                        |vouched by #{vouchers.count}
                    each vouchers
                        .ui.header #{username}
                    unless is_author
                        if vouched_for
                            .ui.button.vouch
                                i.checkmark.icon 
                                |vouch 
                        else
                            .ui.small.button.unvouch
                                |unvouch
                        
                    .ui.header #{task_points} pts earned
                    if in_dev 
                        +print_this
                                                
                                                
                                                
template(name='roles')
    .ui.stackable.padded.grid 
        .four.wide.column
            .ui.inline.header 
                +i name='blog'
                |roles
                // if currentUser
                .ui.icon.button.add_role
                    i.plus.large.icon
            each picked_tags
                a.ui.blue.button.unpick_role_tag
                    |#{this}
            each tag_results
                // if title
                a.ui.compact.button.pick_role_tag
                    |#{title} 
                    // small.ui.grey.text #{count}
                    
        .twelve.wide.column
            .ui.centered.stackable.cards
                each role_docs 
                    +role_card
                    
                    
template(name='role_card')
    a.ui.card.fly_right(href="/role/#{_id}")
        if youtube_id 
            +youtube_view key='youtube_id' direct=true
        if image_id 
            +image_view key='image_id' direct=true
        .content
            .ui.inline.header #{title}
            if private 
                i.large.lock.icon
            .smallscroll
                |!{content}
                .ui.label 
                    i.user.icon
                    |#{_author_username}
                i.tag.icon
                each tags 
                    .ui.basic.label #{this}
            .ui.small.grey.header
                i.clock.icon
                |#{when}
            // +comments_view_small
            +author_info
            div
            +eft_viewer_small


template(name='set_role_sort_key')
    .item.set_sort
        if color
            .ui.label(class=color) #{label}
        else 
            if emoji
                em(data-emoji=emoji)
            else if icon
                i.icon(class=icon)
            |#{label}
        
        
                
template(name='my_roles')
    .ui.inline.header 
        +i name='blog'
        |user roles
    if is_current_user
        .ui.basic.icon.button.add_role
            i.large.plus.icon
    .ui.padded.stackable.one.column.grid
        .column
            .ui.stackable.cards.scrolling
                each role_docs 
                    .ui.card
                        .content
                            a(href="/role/#{_id}") 
                                img.ui.image(src="{{c.url image_id width=400 height=300 crop='pad'}}")
    
                            .smallscroll 
                                |!{content}
                            // |created #{when}
                            small {{when}}
                            a.ui.icon.button(href='/role/#{_id}')
                                i.large.chevron.right.icon
                            
        
        

template(name='set_view_mode_role')
    .item.set_view
        i.icon(class=icon)
        |#{title}


// template(name='set_limit')
    .ui.compact.small.basic.button.set_limit #{amount}



        
template(name='role_item')
    .ui.fluid.segment.view_role.pointer
        a.ui.header(href="/role/#{_id}") #{title}
        div
        .ui.small.grey.inline.header #{when}
        | #{content}
        each tags 
            .ui.basic.small.label #{this}
        

template(name='role_view')
    .ui.stackable.padded.grid
        .three.column.row 
            .column
                .ui.header #{title}
                a.ui.circular.button.fly_left(href="/roles")
                    i.chevron.left.big.icon
                    i.newspaper.big.icon
                    |roles
                // div
                // .ui.inline.grey.header {{from_now start_datetime}}
                
                if can_edit
                    a.ui.circular.icon.button.edit_role(href="/role/#{_id}/edit" title='edit')
                        i.big.link.pencil.icon
                .ui.segment
                    .ui.header 
                        small author
                    a.ui.header(href="/user/#{_author.username}") 
                        img.ui.avatar.image(src="{{c.url _author.image_id height=200 width=200 gravity='face' crop='fill'}}" class=currentUser.invert_class)
                        |#{_author.username}
            .column
                .ui.small.grey.header 
                    i.line.chart.icon
                    |stats
                .ui.list
                    .item #{views} views
                each viewers
                    .ui.label #{username}
                +array_view key='tags' label='tags' direct=true
                +array_view key='badge_titles' label='badges' direct=true
                +voting_full
                .ui.header #{when}
                +eft_viewer
                //- +array_view key='location_tags' label='location_tags' direct=true
                +comments

            .column
                img.ui.image(src="{{c.url image_id }}" class=currentUser.invert_class)
                // a.ui.header(href="/user/#{target.username}")
                //     |#{target.username}
                if youtube_id 
                    +youtube_view key='youtube_id' direct=true
                |!{content}
                div 
                .spacer
                .spacer
                if watson 
                    +watson_view
            // .four.wide.column
                //- .ui.fluid.green.button.submit
                //-     i.checkmark.icon
                //-     |submit
                    
                    
                    
template(name='role_edit')
    .ui.stackable.padded.grid
        .three.column.row 
            .column
                .ui.inline.header 
                    +icolor name='news' cl='ui image inline pointer'
                    |edit role
                a.ui.icon.green.big.button(href="/role/#{_id}" title='save')
                    i.checkmark.big.icon
                +text_edit key='title' label='title' direct=true
            .column
                +html_edit key='content' label='content' direct=true
                +youtube_edit key='youtube_id' label='youtube id' direct=true
            .column
                .ui.header required badges
                +badge_picker
                +task_picker
            .column
                +model_picker model='event' icon='calendar'
                
                i.large.link.red.remove.icon.delete_role
            .column
                .ui.header 
                    small owner - each id should be stored in user account or as nft in crypto wallet.
                    
                .ui.header 
                    small author
                    |#{_author.username}
                .ui.basic.center.aligned.segment
                    +eft_picker color="FF73EA" icon='food' label='food'
                    +eft_picker color="B785E1" icon='home' label='housing'
                    +eft_picker color="7229AF" icon='tshirt' label='clothing'
                    +eft_picker color="1255B8" icon='car' label='transportation'
                    +eft_picker color="83DFF4" icon='lightning' label='energy'
                    +eft_picker color="42E8C4" icon='leaf' label='zero waste'
                    +eft_picker color="40C057" icon='smile' label='wellness'
                    +eft_picker color="FAB005" icon='university' label='education'
                    +eft_picker color="FD7E14" icon='paint brush' label='art'
                    +eft_picker color="FF0000" icon='users' label="community core \n"
                    
            .column
                if is_dev
                    +single_user_edit key='_author_id' label='author' direct=true
                +image_edit key='image_id' label='image' direct=true
                div 
                +array_edit key='tags' label='tags' direct=true icon='tags'
                 +boolean_edit key='published' icon='visible' direct=true
                if is_dev 
                    +text_edit key='model' label='model' direct=true
            .column
                div
                +html_edit key='responsibilities' label='responsibilities'
                div
                +array_edit key='location_tags' label='location_tags' direct=true
                // unless published
                //     a.ui.fluid.green.button.submit(href="/save")
                //         i.checkmark.icon
                //         |publish
                // else
                //     .ui.basic.button.unpublish 
                //         |unpublish
            .column
                .ui.header
                    |audience
                +boolean_edit key='private' label='private' 
                if private 
                    +multi_user_edit key='access_user_ids' label='user picker' direct=true
            .column
                +group_picker
                +array_edit key='skills' label='skills' icon='wrench' direct=true
            .column
                +model_picker model='skill' icon='wrench'