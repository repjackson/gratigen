template(name='field_type_edit')
    +text_edit key='title' direct=true
    +icon_edit key='icon' direct=true


//parties, games, conferences, classes, ceremonies, meetups, ski-trips/adventures, 
// protests, farm swarms
template(name='event_card')
    .content
        div
        .ui.small.header {{medium_date date}} 
            if time 
                |{{time}}
        // .ui.inline.small.header {{long_date start_datetime}}
        // div
        // .ui.small.grey.inline.header {{from_now start_datetime}}
        if location
            i.marker.icon 
            |#{location}
        div 
        // small led by
        img.ui.avatar.image(src="{{c.url fac.image_id height=200 width=200 gravity='face' crop='fill'}}" class=currentUser.invert_class)
        strong #{fac.name}
        |#{event_tickets.count}
        a(href="/m/event/#{_id}" title='ticket purchase required')
            i.checkmark.green.link.icon
        | #{going.count}
        each going
            img.ui.avatar.image(src="{{c.url image_id height=200 width=200 gravity='face' crop='fill'}}" class=currentUser.invert_class)
        i.question.orange.link.icon.mark_maybe(title='mark yourself maybe')
        div
        | #{maybe_user_ids.length}
        each maybe_going
            img.ui.avatar.image(src="{{c.url image_id height=200 width=200 gravity='face' crop='fill'}}" class=currentUser.invert_class)
        | #{not_user_ids.length}
        div
        i.ban.red.link.icon.mark_not(title='mark yourself not')
        each not_going
            img.ui.avatar.image(src="{{c.url image_id height=200 width=200 gravity='face' crop='fill'}}" class=currentUser.invert_class)
        if doc_comments.count
            .meta
                each doc_comments 
                    i.grey.chat.outline.icon
                    img.ui.avatar.image(src="{{c.url _author.image_id height=200 width=200 gravity='face' crop='fill'}}" class=user_class)
                    |#{body}
        div 
        +eft_viewer_small

        +filter_model model='organization' icon='groups' color='83DFF4'



template(name='gcal_button')
    a.ui.circular.basic.circular.large.button(href="http://www.google.com/calendar/event?action=TEMPLATE&text=#{title}&dates=#{start_datetime}/#{end_datetime}&details=#{description}&location=#{location}" target="_window")
        i.calendar.icon
        |add to gcal
        
        
        
template(name='event_edit')
    .ui.stackable.padded.grid
        .centered.row 
            .five.wide.column
                // a.ui.green.big.circular.button.fly_right(href="/event/#{_id}" title='save')
                //     i.checkmark.big.icon
                //     |save
                .ui.inline.header 
                    +icolor name='tear-off-calendar'
                    |edit event
                +boolean_edit key='published' label='published'
                div
                .ui.icon.basic.circular.button.delete_item(title='delete')
                    i.remove.red.icon
                +text_edit key='title' label='title'
                div
                .ui.header 
                    small author
                    |#{_author.name}
                +slug_edit key='slug' label='slug' icon='slug'
                div
                // if reservation_exists
                //     .ui.header date: #{date}
                //     .ui.header time: #{time}
                // else
                +datetime_edit key='start_datetime' label='start datetime'
                div
                +datetime_edit key='end_datetime' label='end datetime'
                div
                // +time_edit key='time' label='time'
                div
                +number_edit key='hour_duration' label='hours'
                div 
                +text_edit key='location' label='location'
                +geolocate_button
                div
                // +range_edit label='time range'
                div
                // +single_user_edit key='facilitator_id' label='facilitator' icon='chess king'
                div
                // +single_user_edit key='support_id' label='support' icon='chess queen'
                div
                +single_user_edit key='host_id' label='host' icon='shield'
                div
                div 
                +array_edit key='tags' label='tags' icon='red tags'
                div
            .ten.wide.column.scrollin
                .ui.header
                    i.users.icon
                    |audience
                +number_edit key='max_attendees' label='max attendees' min='0' max='100'
                div
                // div
                +boolean_edit key='free' label='free'
                div
                unless free
                    +number_edit key='price_points' label='point price' min='0' max='100'
                    div
                +number_edit key='usd_price' label='usd price' min='0' max='100'
                div
                +number_edit key='price_usd' label='dollar price' min='0' max='100'
                div
                +html_edit key='description' label='description'
                div
                // .ui.buttons 
                .ui.basic.center.aligned.segment
                    +eft_picker color="FF73EA" icon='food' label='food'
                    +eft_picker color="B785E1" icon='home' label='housing'
                    +eft_picker color="7229AF" icon='tshirt' label='clothing'
                    +eft_picker color="1255B8" icon='car' label='transportation'
                    +eft_picker color="83DFF4" icon='lightning' label='energy'
                    +eft_picker color="42E8C4" icon='leaf' label='zero waste'
                    +eft_picker color="40C057" icon='smile' label='wellness'
                    +eft_picker color="FAB005" icon='university' label='education'
                    +eft_picker color="FD7E14" icon='paint brush' label='art'
                    +eft_picker color="FF0000" icon='users' label="community core"
                    +eft_picker color="FF0000" icon='users' label="community core"
                div
                .ui.eight.wide.column
                    +calendar_view
                    +mapbox

                
//                     div
//                     +image_edit key='image_id' label='image'
//                     div
//                     +link_edit key='link' label='link'
//                             //light blue
//                         +thing_picker model='project' icon='project' color='7229AF' 
//                             //violet
//                         +thing_picker model='event' icon='calendar' color='FAB005'
//                             //yellow
//                         +thing_picker model='role' icon='what-i-do' color='42E8C4'
//                             //turquoise
//                         +thing_picker model='tasks' icon='task' color='B785E1'
//                             //lavender
//                         +thing_picker model='resource' icon='car' color='FD7E14'  
//                             //orange
//                         +thing_picker model='post' icon='for-you' color='1255B8'
//                             //blue
//                         +thing_picker model='offer' icon='hand-holding-heart' color='FF73EA'
//                             //pink
//                         +thing_picker model='request' icon='commercial' color='40C057'     
//                             //green
//                         +thing_picker model='skills' icon='wrench' color='ff0000'
                    //         //Blue
                    //   +thing_picker model='badges' icon='badge' color='1255B8'
                
// template(name='thing_picker')
                        //thing picker needs to pick the specific thing (ex. a my_skill) to associate it with the thing being created.
//     .ui.compact.circular.secondary.basic.button.pick_model.zoomer(class=button_class)
//         +i name=icon color=color cl='ui mini inline image'
//         // i.exchange.large.icon
//         |#{model}
//                 //red







template(name='reserve_button')
    if slot_res
        .ui.segment
            with slot_res
                .ui.header 
                    |reserved by #{_author.name}
                if can_edit
                    .ui.circular.icon.button.cancel_res
                        i.red.remove.icon
    else 
        // if event_room.dollars_per_hour
        //     .ui.green.button.buy_slot buy slot #{slot}
        //     .ui.green.button.request_slot request for points
        // else
        .ui.green.fluid.button.reserve_slot reserve slot #{slot}
        
        
        

template(name='event_view')
    // with current_doc
    .ui.stackable.padded.grid
        .middle.aligned.row 
            .sixteen.wide.column
                // if currentUser
                //     a(href="/events")
                //         i.calendar.big.circular.link.icon
                // .ui.large.inline.header #{title}
                if can_edit
                    if published 
                        i.big.eye.green.icon(title='published')
                    else 
                        i.big.eye.red.slash.icon(title='unpublished')
                // div
                // .ui.inline.header {{medium_date date}}
                .ui.inline.header {{long_date start_datetime}}
                // .ui.inline.grey.header {{from_now date}}
                if time 
                    .ui.inline.grey.header {{time}}
                // if can_edit
                //     a.edit_event(href="/event/#{_id}/edit" title='edit')
                //         i.large.blue.link.pencil.circular.icon
                +eft_viewer
        .row 
            .four.wide.column.scrollin
                if location 
                    i.large.marker.icon(title='location')
                    |#{location}
                .spacer
                // a(href="/m/room/#{event_room._id}")
                //     img.ui.small.circular.inline.image.pointer.zoom(src="{{c.url event_room.image_id }}" class=currentUser.invert_class)
                //     .ui.inline.header.pointer.zoom
                //         |#{event_room.title}
                if is_admin
                    .ui.segment
                        .ui.header 
                            i.shield.icon
                            | author
                        a.ui.header(href="/user/#{_author.username}") 
                            img.ui.avatar.image(src="{{c.url _author.image_id height=200 width=200 gravity='face' crop='fill'}}" class=currentUser.invert_class)
                            |#{_author.name}
                if facilitator
                    .ui.dividing.header 
                        i.chess.king.grey.icon
                        |facilitator
                    a.ui.header(href="/user/#{fac.username}") 
                        img.ui.avatar.image(src="{{c.url fac.image_id height=200 width=200 gravity='face' crop='fill'}}" class=currentUser.invert_class)
                        |#{fac.name}
                if support
                    .ui.dividing.header 
                        i.chess.queen.grey.icon
                        |support
                    a.ui.header(href="/user/#{support.username}") 
                        img.ui.avatar.image(src="{{c.url support.image_id height=200 width=200 gravity='face' crop='fill'}}" class=currentUser.invert_class)
                        |#{support.name}
                if is_admin
                    .ui.header
                        |#{max_attendees} max attendees
                // .ui.small.grey.header 
                //     i.line.chart.icon
                //     |stats
                .ui.small.header #{views} views
                each viewers
                    .ui.label #{username}
                with current_doc
                    +gcal_button
                .ui.hidden.divider
                +array_view key='tags' label='tags' icon='tags red'
                div
                div
                if currentUser
                    +voting_full
                +array_view key='location_tags' label='location tags' icon='marker'
                div
            .eight.wide.column.scrollin
                a(href="{{c.url image_id }}")
                    img.ui.fluid.rounded.image(src="{{c.url image_id }}" class=currentUser.invert_class)
                // a.ui.header(href="/user/#{target.username}")
                //     |#{target.username}
                // .scrolling
                |!{description}
                // div 
                // .spacer
                // .spacer
                +comments
            .four.wide.column
                .ui.big.button.buy_for_usd
                    |buy with usd
                .ui.inline.large.header 
                    |RSVP
                if tickets_left
                    .ui.grey.small.inline.header #{tickets_left} available
                    .spacer
                    .ui.grey.small.inline.header  min requested 
                    // .spacer
                    // .ui.grey.small.inline.header (give more if you want to)
                    div
                if my_ticket
                    .ui.header your ticket
                    with my_ticket
                        .ui.segment
                            // if is_usd
                            //     .ui.inline.green.header ${{money_format amount}}
                            // else
                            .ui.inline.header #{point_amount}pts
                            |#{when} 
                            if is_usd
                                .ui.button.request_refund
                                    i.undo.icon
                                    |request refund
                            else
                                .ui.button.return
                                    i.undo.icon
                                    |return
                unless my_ticket
                    .ui.green.fluid.button.buy_ticket
                        |buy ticket #{price}p
                .spacer
                .spacer
                .ui.dividing.header
                    // +icolor name='activity-history' cl='ui inline image'
                    |#{event_ticket_docs.count} spots reserved
                .ui.comments
                    each event_ticket_docs
                        .comment
                            a.avatar(href="/user/#{_author.username}") 
                                img(src="{{c.url _author.image_id height=200 width=200 gravity='face' crop='fill'}}" class=currentUser.invert_class)
                            a.content(href="/order/#{_id}")
                                a.author(href="/user/#{_author.username}") 
                                    |#{_author.name}
                                .metadata
                                    span.date #{when}
                                .text
                                    if is_usd
                                        .ui.inline.green.header ${{money_format amount}}
                                    else
                                        .ui.inline.header #{point_amount}pts
                                // span.meta
                                //     if can_edit
                                //         +remove_icon
                                //     else
                                //         +voting_small
                    
                +attendance
                +calendar_view
                +mapbox
    // .ui.modal
    //     i.close.icon
    //     .header buy ticket for #{current_doc.point_price}pts?
    //     .content
    //         .description
    //             .ui.header event title: #{current_doc.title}
    //             .ui.input
    //                 input(type='number' min=current_doc.point_price)
    //     .actions
    //         .ui.red.cancel.button cancel
    //         .ui.green.big.ok.button ok



template(name='eft_viewer')
    +eft_view_item color="FF73EA" icon='food' label='food'
    +eft_view_item color="B785E1" icon='home' label='housing'
    +eft_view_item color="7229AF" icon='tshirt' label='clothing'
    +eft_view_item color="1255B8" icon='car' label='transportation'
    +eft_view_item color="83DFF4" icon='lightning' label='energy'
    +eft_view_item color="42E8C4" icon='leaf' label='zero waste'
    +eft_view_item color="40C057" icon='smile' label='wellness'
    +eft_view_item color="FAB005" icon='university' label='education'
    +eft_view_item color="FD7E14" icon='paint brush' label='art'
    +eft_view_item color="FF0000" icon='users' label='community core'
    
template(name='eft_viewer_small')
    each model_docs_helper 'eft'
        +eft_view_item_small




template(name='attendance')
    if event_tickets.length
        .ui.inline.green.header 
            |#{ticket.length} going
    // .ui.inline.small.grey.header ticket required
    // .ui.icon.button.pick_going 
    //     i.green.checkmark.big.icon
    // each going 
    //     a.ui.circular.basic.circular.button(href="/user/#{username}")    
    //         img.ui.avatar.compact.image(src="{{c.url image_id height=200 width=200 gravity='face' crop='fill'}}" class=currentUser.invert_class)
    //         |#{username}
    .ui.basic.circular.button.mark_maybe
        .ui.orange.header
            // if currentUser
            //     +icolor name='clock' cl='mark_maybe pointer'
            // else
            i.question.icon
            |#{maybe_going.count} maybe
    // .ui.icon.button.mark_maybe 
    //     i.yellow.minus.big.icon
    each maybe_going
        a.ui.circular.basic.circular.button(href="/user/#{username}")    
            img.ui.avatar.compact.image(src="{{c.url image_id height=200 width=200 gravity='face' crop='fill'}}" class=currentUser.invert_class)
            |#{username}
    .ui.basic.circular.button.mark_not
        .ui.red.header
            i.ban.icon
            |#{not_going.count} not going
        // .ui.icon.button.pick_not
            // i.big.ban.icon
    each not_going
        a.ui.circular.basic.circular.button(href="/user/#{username}")    
            img.ui.avatar.compact.image(src="{{c.url image_id height=200 width=200 gravity='face' crop='fill'}}" class=currentUser.invert_class)
            |#{username}




template(name='ticket_view')
    with current_doc
        .ui.stackable.padded.grid
            .row 
                .four.wide.column
                    if can_edit
                        .ui.button.cancel_reservation
                            i.large.remove.icon
                            |cancel reservation
                .eight.wide.column
                    .ui.header
                        i.ticket.icon
                        |#{ticket_point_price}
                        | points ticket
                    .ui.small.header
                        i.clock.icon
                        | #{when}
                    .ui.segment
                        .ui.inline.header 
                            i.user.outline.icon
                            |buyer
                        a.ui.inline.header(href="/user/#{_author.username}") 
                            img.ui.avatar.image(src="{{c.url _author.image_id height=200 width=200 gravity='face' crop='fill'}}")
                            |#{_author.username}
                    .ui.segment
                        a.ui.inline.header(href="/event/#{event_id}")
                            i.calendar.icon
                            |event
                        a(href="/event/#{event_id}")
                            img.ui.medium.image(src="{{c.url ticket_event.image_id height=200 width=200 gravity='face' crop='fill'}}")
                        a.ui.header(href="/event/#{ticket_event._id}")
                            |#{ticket_event.title}
                            
                    +number_view key='amount' label='amount'
                    div
                    +textarea_view key='description' label='description'
                    div
                    +image_view key='image_id' label='image'
                    div
                    div 
                    if tags
                        i.tags.icon
                        each tags 
                            .ui.big.label #{this}
                    .spacer
                    .spacer
                    +comments
                    // +voting_full
                    //- +array_view key='location_tags' label='location_tags'
                    div
                .four.wide.column
                    //- .ui.fluid.green.button.submit
                    //-     i.checkmark.icon
                    //-     |submit


template(name='profile_org_item')
    .ui.segment.grid
        .row
            .four.wide.column
                +image_view key='image_id'  cl='zoom ui tiny image'
            .twelve.wide.column
                .ui.header #{title}
                a.ui.small.header.inline.lowercase(href="/org/#{_id}/")
                    |#{price_per_serving}c / #{serving_unit}
                .ui.small.inline.header #{when}
                a.ui.button(href="/org/#{_id}/")
                    |view
                    i.right.chevron.icon
                if is_admin
                    +remove_button
    
    
    
template(name='orgs_small')
    a.ui.header.zoomer(href="/orgs")
        +i name='orgs'
        |orgs
    .ui.selection.animated.list.smallscroll
        each org_docs
            a.item(href="/org/#{_id}")
                img.ui.avatar.image(src="{{c.url image_id width=200 height=200}}")
                |#{title}


template(name='product_view')
    .ui.stackable.padded.three.column.grid
        .row
            .column
                .ui.large.inline.header 
                    //- small viewing
                    | #{title}
                div
                .ui.small.grey.inline.header 
                    i.code.icon
                    |#{slug}
                div
                a.ui.basic.icon.button.fly_left(href="/shop")
                    i.chevron.left.large.icon
                    // i.large.food.icon
                    +i name='food-cart' cl='ui mini inline image'
                if in_dev
                    a(href="/product/#{_id}/edit")
                        i.pencil.blue.large.link.circular.icon
                // a(href="{{c.url image_id}}" target="_window")
                // .four.wide.column
                img.ui.rounded.fluid.image.zoomer(src="{{c.url image_id}}")
                if image_id2
                    img.ui.rounded.image.zoomer(src="{{c.url image_id2}}")
            .column
                +html_view key='description' direct=true
                // +text_view key='size_description' label='size description'  direct=true
                a.ui.circular.button(href=product_link)
                    // i.wordpress.large.icon
                    i.external.icon
                    |#{product_link}
                
                +boolean_view key='gluten_free' label='gluten free' direct=true icon='no-gluten'
                +boolean_view key='vegetarian' label='vegetarian' direct=true icon='vegetarian-mark'
                +boolean_view key='no_sugar_added' label='no sugar added' direct=true icon='no-sugar2'
                +boolean_view key='vegan' label='vegan' direct=true icon='vegan-symbol'
                +boolean_view key='paleo' label='paleo' direct=true icon='caveman'
                +boolean_view key='local' label='local' direct=true icon='marker'
                +boolean_view key='nut_free' label='nut free' direct=true icon='no-peanut'
                +boolean_view key='rescued' label='rescued' direct=true icon='nothing-found'
                +boolean_view key='organic' label='organic' direct=true icon='organic-food'
                +boolean_view key='no_gmo' label='no gmo' direct=true icon='no-gmo'
                +boolean_view key='jar' label='jar container (requires deposit & return)' direct=true icon='mason-jar'
                // .ui.header #{menu_section}
                        +link_edit key='amazon_referral_link' label='amazon referral link' icon='amazon' direct=true
                // +boolean_view key='has_2cup' label='2 cup' direct=true icon='cup'
                div
                .ui.inline.header 
                    +i name='ingredients'
                    |ingredients
                each ingredients
                    .ui.large.basic.label.goto_ingredient #{this}
                div
                +voting_full
                +link_view key='amazon_referral_link' label='amazon link' icon='amazon' direct=true
                +link_view key='external_link' label='external link' icon='globe' direct=true
                +comments
                
                // +product_orders
            .column
                .ui.header #{price_points} points
                .ui.header $#{price_usd}
                .ui.big.fluid.green.button.add_to_cart
                    i.cart.plus.large.icon
                    |add to cart
                +bookmark_button
            .column
                // .ui.large.button.generate_qrcode
                //     i.large.qrcode.icon
                //     |generate qr code
                // #qrcode(width='400px')
                .ui.segment
                    +product_inventory
                .ui.list
                    .item #{product_link}
                    .item calculated inventory
                    .item #{total_units_sold} total units sold
                    .item $#{total_revenue} total revenue
                    .item expected inventory
                    .item query params: #{query_params}
                    .item #{last_inventory_boh_record} most recent BOH record
                    .item #{last_inventory_foh_record} most recent FOH record
                i.refresh.large.link.icon.calc_stats(title='refresh_stats')
            .column
                +product_reviews
            .five.wide.column
                +product_subscriptions
                // .ui.green.large.button.add_to_cart
                //     // i.cart.plus.large.icon
                //     +i name='add-shopping-cart--v1' cl='ui avatar image'
                //     |add to cart
                // .ui.link.card.zoomer.goto_source
                //     img.ui.fluid.image(src="{{c.url product_source.image_id width=200 height=200 gravity='face' crop='fill'}}")
                //     .content
                //         .ui.header.zoomer
                //             |#{product_source.title}
                .ui.header 
                    i.fork.icon
                    |related products
                each related_products
                    a.ui.header(href="/product/#{_id}") #{title}
                            
        
        
            
template(name='product_inventory')      
    .ui.inline.header 
        +i name='shield'
        |inventory
    div 
    .ui.list #{last_inventory_record} most recent record
    a.ui.icon.basic.button.add_inventory
        i.plus.icon
    .ui.large.selection.list
        each inventory_items
            .item
                .content
                    // unless editing_this
                    img.ui.rounded.small.inline.image(src="{{c.url image_id gravity='face' crop='fit'}}" class=cl)
                    
                    // +image_view key='image_id' cl='ui tiny inline image'
                    .ui.basic.label ##{amount}
                    .ui.basic.label #{location}
                    if notes
                        .ui.basic.label notes: #{notes}
                    .ui.basic.label
                        i.user.icon
                        |#{staff}
                    i.edit.link.icon.edit_inventory_item
                    if editing_this
                        +number_edit key='amount' label='amount' direct=true
                        +key_value_edit key='location' value='boh' label='boh' direct=true
                        +key_value_edit key='location' value='foh' label='foh' direct=true
                        // +text_edit key='location' label='location' icon='marker' direct=true
                        +text_edit key='notes' label='notes' icon='pencil' direct=true
                        // +text_edit key='staff' label='staff' icon='user' direct=true
                        +image_edit key='image_id'
                        +key_value_edit key='staff' value='matt' direct=true
                        +key_value_edit key='staff' value='nena' direct=true
                        +key_value_edit key='staff' value='rachel' direct=true
                        +key_value_edit key='staff' value='jimmy' direct=true
                        +key_value_edit key='staff' value='elena' direct=true
                        +key_value_edit key='staff' value='eric' direct=true
                        +key_value_edit key='staff' value='luke' direct=true
                        +key_value_edit key='staff' value='mateo' direct=true
                        i.checkmark.green.link.circular.large.icon.save_inventory_item

template(name='product_reviews')
    .ui.inline.header 
        +i name='popular-topic'
        |reviews
    .ui.circular.basic.icon.button.add_review
        i.plus.icon
    div
    each product_recipes
        a.ui.header(href="/recipe/#{_id}/view") #{title}
        
template(name='product_subscriptions')     
    div
    if subscribed
        .ui.basic.green.inverted.button.unsubscribe
            i.undo.icon
            |unsubscribe
    else
        .ui.basic.green.inverted.button.subscribe
            i.undo.icon
            |subscribe
    .ui.small.header 
        +i name='clock'
        |subs
    .ui.link.selection.animated.list
        each product_subs
            a.item(href="/sub/#{_id}") 
                |#{when} #{_author_username}
                .ui.basic.label #{sub_day}
                .ui.basic.label #{sub_frequency}
    .ui.small.header 
        |your subscriptions

template(name='product_orders')                            
    if can_order
        +order_button
    each subs
        .ui.header #{_author_username}
    .ui.header 
        +i name='order-history'
        |#{product_orders.count}
        |orders
        |(${{fixed product_order_total}})
    .ui.basic.segments
        each product_orders
            +product_order_card
    .ui.header #{views} views
    +order_status_icons
    .ui.hidden.divider
                
template(name='order_status_icons')  
    a.zoomer(href="/order/#{_id}")
        if runner_viewed
            +icolor name='eye-checked' cl='ui avatar image'
        if preparing
            +icolor name='new-product--v1' cl='ui avatar image'
        if prepared
            +icolor name='handle-with-care' cl='ui inline image'
        if arrived
            +icolor name='checked-truck' cl='ui inline image'
        if delivered
            +icolor name='checkmark' cl='ui inline image'
        
        if delivery_photo
            +image_view key='delivery_photo' direct=true cl='ui tiny inline image'

         
template(name='product_order_card')
    .ui.segment(class=product_order_class)
        .ui.inline.green.header
            |${{fixed order_price}} 
            if _author.image_id
                img.ui.avatar.image(src="{{c.url _author.image_id width=100 height=100 gravity='face' crop='fill'}}")
            |#{_author.username}
        // div
        .ui.large.basic.label
            i.clock.icon
            |status: #{status}
        .ui.small.inline.header
            | #{when} ({{long_date _timestamp}})
        a.ui.compact.big.icon.button(href="/order/#{_id}")
            i.right.chevron.large.icon
        if is_author
            .ui.small.compact.basic.button.cancel_order(title='cancel')
                i.remove.red.icon
                |cancel



template(name='order_button')
    // if servings_left
    .ui.green.large.button.order_product
        i.cart.plus.large.icon
        strong ${{fixed price_usd}}
        // |order #{serving_unit}
        // small order for
        // strong #{price_franc}f
    // else 
    //     .ui.grey.header sold out
        //- .ui.teal.large.button.join_waitlist
        //-     i.clock.large.icon
        //-     |join wait list




template(name='product_edit')
    with current_doc
        .ui.stackable.padded.three.column.grid
            .row
                .column
                    .ui.inline.header
                        i.pencil.icon
                        | #{title}
                        small product
                    .ui.large.icon.fluid.green.button.save_product.fly_right(title='save product')
                        i.checkmark.large.icon   
                    +text_edit key='title' label='title' icon='header' direct=true
                    +text_edit key='slug' label='slug' icon='slug' direct=true
                    +print_this
                .column
                    +image_edit key='image_id' label='image' direct=true
                    +image_edit key='image_id2' label='alt image' direct=true
                    +link_edit key='product_link' label='old site link' direct=true
                    // div
                    +float_edit key='price_usd' label='$ price' direct=true
                    +number_edit key='price_points' label='point price' icon='coins' direct=true
                // .four.wide.column
                //     .ui.inline.header 
                //         +i name='category'
                //         |section
                //     div
                //     +number_edit key='a_number' label="'A' number" direct=true
                //     div
                //     +number_edit key='b_number' label="'B' number" direct=true
                //     +key_value_edit key='shop_section' value='beans' label='beans' icon='white-beans'
                //     +key_value_edit key='shop_section' value='coffee' label='coffee' icon='coffee'
                //     +key_value_edit key='shop_section' value='snacks' label='snacks' icon='potato-chips'
                //     +key_value_edit key='shop_section' value='fridge' label='fridge' icon='fridge'
                //     +key_value_edit key='shop_section' value='freezer' label='freezer' icon='ice-cream-freezer'
                //     +key_value_edit key='shop_section' value='nuts_seeds' label='nuts & seeds' icon='chia-seeds'
                //     +key_value_edit key='shop_section' value='rice_grains' label='rice & grains' icon='wheat'
                //     // +key_value_edit key='shop_section' value='seeds' label='seeds' icon='seeds'
                .column
                    +text_edit key='size_description' label='size description' icon='content' direct=true
                    .ui.inline.header food
                    +boolean_edit key='is_food' label='is food' direct=true icon='food'
                    if is_food
                        +ingredient_picker
                        +boolean_edit key='gluten_free' label='gluten free' direct=true icon='no-gluten'
                        +boolean_edit key='paleo' label='paleo' direct=true icon='caveman'
                        +boolean_edit key='vegetarian' label='vegetarian' direct=true icon='vegetarian-mark'
                        +boolean_edit key='no_sugar_added' label='no sugar added' direct=true icon='no-sugar2'
                        +boolean_edit key='vegan' label='vegan' direct=true icon='vegan-symbol'
                        +boolean_edit key='no_gmo' label='no gmo' direct=true icon='no-gmo'
                        +boolean_edit key='local' label='local' direct=true icon='marker'
                        +boolean_edit key='nut_free' label='nut free' direct=true icon='no-peanut'
                        +boolean_edit key='rescued' label='rescued' direct=true icon='nothing-found'
                        +boolean_edit key='kosher' label='kosher' direct=true icon='judaism'
                        +boolean_edit key='organic' label='organic' direct=true icon='organic-food'
                        // +boolean_edit key='jar' label='jar container (requires deposit & return)' direct=true icon='mason-jar'
                        div
                        +number_edit key='calories' label='calories' icon='food' direct=true
                .column
                    div
                    +html_edit key='description' label='description' direct=true
                    if can_delete
                        .ui.red.button.delete_product
                            i.remove.icon   
                            | delete
                .column
                    .ui.header 
                        +i name='field-and-tractor'
                        |source
                        with product_source
                            a.ui.header.pointer.zoomer(href="/source/#{_id}")
                                img.ui.avatar.image(src="{{c.url image_id width=300 height=300 gravity='face' crop='fill'}}")
                                |#{title}
                            i.remove.link.circular.red.icon.remove_source
                            // if is_admin
                            
                    unless source_id
                        // if is_admin
                        .ui.icon.input 
                            i.building.icon
                            input.source_search(type='text' placeholder='search source title')
                        .ui.selection.link.animated.list
                            each search_results
                                .ui.item.pick_source.zoomer
                                    img.ui.avatar.image(src="{{c.url image_id width=300 height=300 gravity='face' crop='fill'}}")
                                    |#{title}
                            
                                
                                
                                
                                
template(name='group_picker')
    +boolean_edit key='has_group' label='attach group'
    if has_group
        .ui.header 
            +i name='campfire'
            |groups
        
        // if is_admin
        .ui.icon.large.input 
            if group_search_value
                i.large.red.remove.link.icon.zoomer.clear_search
            else 
                i.search.icon
            input.group_search(type='text' placeholder='search' value=group_search_value)
        if group_results
            .ui.selection.link.animated.list
                each group_results
                    .ui.item.pick_group.zoomer
                        img.ui.avatar.image(src="{{c.url image_id width=300 height=300 gravity='face' crop='fill'}}")
                        |#{title}
        // else if group_search_value
        .ui.button.create_group
            |add #{group_search_value}
        
        if product_groups
            .ui.header 
                |#{product_groups.length}
                |picked groups
            .ui.list
                each product_groups
                    .ui.item
                        |#{title}
                        i.remove.link.icon.zoomer.remove_group
                        
                    

                            
template(name='ingredient_picker')
    .ui.header 
        +i name='ingredients'
        |ingredients
    // if is_admin
    .ui.icon.large.input 
        if ingredient_search_value
            i.large.red.remove.link.icon.zoomer.clear_search
        else 
            i.search.icon
        input.ingredient_search(type='text' placeholder='search' value=ingredient_search_value)
    if ingredient_results
        .ui.selection.link.animated.list
            each ingredient_results
                .ui.item.pick_ingredient.zoomer
                    img.ui.avatar.image(src="{{c.url image_id width=300 height=300 gravity='face' crop='fill'}}")
                    |#{title}
    // else if ingredient_search_value
    .ui.button.create_ingredient
        |add #{ingredient_search_value}
    
    if product_ingredients
        .ui.header 
            |#{product_ingredients.length}
            |picked ingredients
        .ui.list
            each product_ingredients
                .ui.item
                    |#{title}
                    i.remove.link.icon.zoomer.remove_ingredient

                            
                            
                            
template(name='product_card')
    .ui.card.zoomer(class=product_card_class title=ingredients)
        if rescued 
            .ui.top.right.attached.blue.label(title='rescued')
                i.search.icon
        if local 
            .ui.top.right.attached.corner.green.label(title='local')
                i.marker.icon
        a.zoomer.fly_right(href="/product/#{_id}") 
            img.ui.centered.image(src="{{c.url image_id width=400 height=300 crop='pad'}}")
        .content
            a.ui.header.fly_right(href="/product/#{_id}") 
                //- |#{_author.name}'s
                | #{title}
            //- if session_is 'view_ingredients' true
            // +ismall name='ingredients'
            // each ingredients
            //     .ui.small.label #{this}
            if gluten_free
                +i name='no-gluten' cl='ui mini inline image' title='gluten free'
            if vegan
                +i name='vegan-food' cl='ui mini inline image' title='vegan'
            //- .ui.inline.small.header tags
            // .content
            //     .right.floated.meta
            //         | {{from_now datetime_available}}
            //     //- if session_is 'view_users' true
            // //- a.image(href="/product/#{_id}")
                
        .content    
            .ui.inline.header 
                |${{fixed price_usd}}
            i.big.link.cart.plus.green.icon.add_to_cart
            if is_admin
                a(href="/product/#{_id}/edit")
                    i.pencil.link.icon
            .ui.inline.small.header 
                |(#{menu_section}) 
            div
            .ui.inline.inline.small.grey.header #{views}
                i.eye.icon
            .ui.inline.inline.small.grey.header #{points} 
                i.line.chart.icon

template(name='service_card')
    .content
        if private 
            i.large.lock.icon
        .smallscroll
            |!{content}


template(name='set_service_sort_key')
    .item.set_sort
        if color
            .ui.label(class=color) #{label}
        else 
            if emoji
                em(data-emoji=emoji)
            else if icon
                i.icon(class=icon)
            |#{label}
        
        
                
template(name='user_services')
    .ui.inline.header 
        +i name='blog'
        |user services
    if is_current_user
        .ui.basic.icon.button.add_service
            i.large.plus.icon
    .ui.padded.stackable.one.column.grid
        .column
            .ui.stackable.cards.scrolling
                each service_docs 
                    .ui.card
                        .content
                            a(href="/service/#{_id}") 
                                img.ui.image(src="{{c.url image_id width=400 height=300 crop='pad'}}")
    
                            .smallscroll 
                                |!{content}
                            // |created #{when}
                            small {{when}}
                            a.ui.icon.button(href='/service/#{_id}')
                                i.large.chevron.right.icon
                            
        
        

template(name='set_view_mode_service')
    .item.set_view
        i.icon(class=icon)
        |#{title}


// template(name='set_limit')
    .ui.compact.small.basic.button.set_limit #{amount}



        
template(name='service_item')
    .ui.fluid.segment.view_service.pointer
        a.ui.header(href="/service/#{_id}") #{title}
        div
        .ui.small.grey.inline.header #{when}
        | #{content}
        each tags 
            .ui.basic.small.label #{this}
        

template(name='service_view')
    with current_doc
        img.ui.image(src="{{c.url image_id }}" class=currentUser.invert_class)
        // a.ui.header(href="/user/#{target.username}")
        //     |#{target.username}
        if youtube_id 
            +youtube_view key='youtube_id' 
        |!{content}
        div 
    // .four.wide.column
        //- .ui.fluid.green.button.submit
        //-     i.checkmark.icon
        //-     |submit
                    
                    
                    
template(name='service_edit')
    with current_doc
        .ui.stackable.padded.grid
            .row 
                .ten.wide.column
                    .ui.inline.header 
                        +icolor name='news' cl='ui image inline pointer'
                        |edit service
                    +text_edit key='title' label='title' 
                    +html_edit key='content' label='content' 
                    +youtube_edit key='youtube_id' label='youtube id' 
                .six.wide.column
                    .ui.large.red.button.delete_service
                        i.remove.icon
                        |delete service
                    .ui.header 
                        small author
                        |#{_author.username}
                    if is_dev
                        +single_user_edit key='_author_id' label='author' 
                    +image_edit key='image_id' label='image' 
                    div 
                    +array_edit key='tags' label='tags'  icon='tags'
                    +boolean_edit key='published' icon='visible' 
                    if is_dev 
                        +text_edit key='model' label='model' 
                    +array_edit key='location_tags' label='location tags' icon='marker'
                    // unless published
                    //     a.ui.fluid.green.button.submit(href="/save")
                    //         i.checkmark.icon
                    //         |publish
                    // else
                    //     .ui.basic.button.unpublish 
                    //         |unpublish
                    .ui.header
                        |audience
                    +boolean_edit key='private' label='private' 
                    if private 
                        +multi_user_edit key='access_user_ids' label='user picker' 
                    +group_picker
                    
                    
template(name='my_tasks')
    .ui.header my tasks
                    
                    
                    
template(name='toggle_sort_direction_button')
    .ui.compact.icon.button.set_sort_direction(title='toggle sort direction')
        if sorting_up
            i.sort.amount.down.icon
        else
            i.sort.amount.up.icon

                    
                    
template(name='task_card')
    .ui.card
        img.ui.image(src="{{c.url image_id width=400 height=300 crop='pad'}}")
        .content
            .ui.header 
                if complete 
                    i.large.green.checkmark.icon
                |#{title}
            .ui.inline.header #{when}
            |!{description}
            .ui.inline.header #{points}pts
            each tags
                .ui.small.basic.label #{this}
            +author_info
            
            
                
                
template(name='task_edit')
    .ui.stackable.padded.grid
        .three.column.row
            .column
                .ui.inline.header
                    i.pencil.icon
                    | #{title}
                    small task
                a.ui.fluid.large.icon.green.button.fly_left(href="/task/#{_id}/" title='save product')
                    i.checkmark.big.icon
                +text_edit key='title' label='title' direct=true
                +image_edit key='image_id' label='image' direct=true
                +roles_field key='image_id' label='image' direct=true
                div
                +boolean_edit key='complete' label='complete' direct=true
                unless complete
                    .ui.button.mark_complete
                        i.checkmark.icon
                        |mark complete
                if complete
                    .ui.header 
                        i.green.checkmark.icon
                        |complete
                        |{{from_now complete_timestamp}}
                        |{{long_date complete_timestamp}}
                // +boolean_edit key='has_user_assignment' label='has user assignment' direct=true
                // if has_user_assignment
                each group_members
                    .ui.button.assign_member #{username}
                div
                // +boolean_edit key='has_minute_expectation' label='has minute expectation' direct=true
                // div
                // if has_minute_expectation
                +number_edit key='minute_expectation' label='time expectation (minutes)' direct=true
                div
                // +boolean_edit key='has_duedatetime' label='has due date/time' icon='calendar' direct=true
                div
                +model_picker model='project' icon='project'
            .column
                // if has_duedatetime
                +datetime_edit key='due_datetime' label='due date/time' icon='calendar' direct=true
                // +number_edit key='amount' label='amount (leave 0 for infinite)' direct=true
                // div
                // +boolean_edit key='has_point_bounty' label='has point bounty' icon='hashtag' direct=true
                // div
                // if has_point_bounty
                +number_edit key='point_bounty' label='point bounty' direct=true icon='coins'
                div
                div
                +single_user_edit key='user_assignment' label='user assignment' icon='user' direct=true
                // +boolean_edit key='has_subgroup_specification' label='has specific subgroup' icon='users' direct=true
                div
                .ui.header
                    i.red.marker.icon
                    |location
                +text_edit key='location' 
                +geolocate_button

                // .ui.header     
                //     i.users.icon
                //     |subgroup availability
                // each current_subgroups
                //     .ui.button.select_subgroup(class=subgroup_class)
                //         img.ui.tiny.inline.image(src="{{c.url image_id width=400 height=300 crop='pad'}}")
                //         |#{title}
                // +number_edit key='amount' label='amount (leave 0 for infinite)' direct=true
            .column
                +html_edit key='description' label='description' direct=true
                // .ui.header     
                //     i.large.building.icon
                //     |associated unit
                // if selected_unit
                //     .ui.header #{title}
                // each units
                //     .ui.button.select_location(class=location_class)
                //         img.ui.tiny.inline.image(src="{{c.url image_id width=400 height=300 crop='pad'}}")
                //         |#{title}
                +array_edit key='tags' label='tags' icon='tags' direct=true
                .ui.red.button.delete_task
                    i.remove.icon   
                    | delete
            
                
template(name='task_view')
    .ui.stackable.padded.grid
        .three.column.row
            .column
                // +parent_unit_button
                .ui.inline.header
                    | #{title}
                    small task view
                +image_view key='image_id' label='image' direct=true
                div
                a.ui.big.button.fly_right(href="/task/#{_id}/edit")
                    i.pencil.icon
                    |edit
            .column
                +boolean_view key='has_user_assignment' label='has user assignment' direct=true
                if has_user_assignment
                    each group_members
                        .ui.button.assign_member #{username}
                +boolean_view key='has_minute_expectation' label='has minute expectation' direct=true
                if has_minute_expectation
                    +number_view key='minute_expectation' label='time expectation (minutes)' direct=true
                +boolean_view key='has_duedatetime' label='has due date/time' icon='calendar' direct=true
                if has_duedatetime
                    +datetime_view key='due_datetime' label='due date/time' icon='calendar' direct=true
                +number_view key='amount' label='amount (leave 0 for infinite)' direct=true
                +boolean_view key='has_point_bounty' label='has point bounty' icon='hashtag' direct=true
                if has_point_bounty
                    +number_view key='point_bounty' label='point_bounty' direct=true
                // if unit_id 
                //     +parent_unit_button
                    
            .column
                +html_view key='description' label='description' direct=true
                +array_view key='tags' label='tags' icon='tags' direct=true
                if currentUser
                    .ui.button.record_work
                        |record work
                .ui.header 
                    i.wrench.icon
                    |work
                .ui.selection.animated.list
                    each task_work
                        a.item(href="/work/#{_id}") 
                            img.ui.tiny.inline.image(src="{{c.url image_id width=400 height=300 crop='pad'}}")
                            if before_image_id
                                img.ui.tiny.inline.image(src="{{c.url before_image_id width=400 height=300 crop='pad'}}")
                            if before_image_id
                                img.ui.tiny.inline.image(src="{{c.url after_image_id width=400 height=300 crop='pad'}}")
                            |#{when} #{_author_username}
                        
                        
                        
                        
template(name='work')
    .ui.stackable.padded.grid
        .four.wide.column
            .ui.inline.header 
                i.wrench.icon
                |work
            div
            .ui.inline.small.header 
                i.user.friends.icon
                |staff
            each picked_authors
                a.ui.blue.label.unpick_author
                    |#{this}
            each author_results
                if title
                    a.ui.basic.circular.small.link.label.pick_author
                        |#{title} 
                        small.ui.grey.text #{count}
            div
            .ui.inline.small.header 
                i.tasks.icon
                |task
            each picked_tasks
                a.ui.blue.label.unpick_task
                    |#{this}
            each task_results
                if title
                    a.ui.basic.circular.small.link.label.pick_task
                        |#{title} 
                        small.ui.grey.text #{count}
            div
            .ui.inline.small.header 
                i.marker.icon
                |location
            each picked_locations
                a.ui.blue.label.unpick_location
                    |#{this}
            each location_results
                if title
                    a.ui.basic.circular.small.link.label.pick_location
                        |#{title} 
                        small.ui.grey.text #{count}
            div
            .ui.inline.small.header 
                i.marker.icon
                |timestamp_tags
            each picked_timestamp_tags
                a.ui.blue.label.unpick_timestamp_tag
                    |#{this}
            each timestamp_tag_results
                if title
                    a.ui.basic.circular.small.link.label.pick_timestamp_tag
                        |#{title} 
                        small.ui.grey.text #{count}
        .twelve.wide.column
            // .ui.basic.button.add_work
            //     i.large.plus.icon
            //     |log work
            // .ui.basic.button.add_task
            //     i.large.plus.icon
            //     |task
            // each picked_sections
            //     button.ui.blue.compact.small.button.unpick_section(tabindex='0')
            //         //- i.remove.icon
            //         | #{this}
            // // div
            // +i name='clock' cl='ui inline mini image'
            // each sections
            //     button.ui.compact.basic.button.pick_section(tabindex="0" class=result_class title=count) #{title}
            //         //- small #{count}
            // // unless one_post
            span.sorting_row
                // +session_set key='view_users' value='grid' icon='th' 
                // +session_set key='view_users' value='list' icon='list'
                // +session_set key='sort_users_direction' value='-1' icon='chevron down'
                // +session_set key='sort_users_direction' value='1' icon='chevron up'
                // +session_set key='sort_users_key' value='points' icon='coins'
                // +session_set key='sort_users_key' value='created_date' icon='clock'
                // +session_set key='view_limit' value=1
                // +session_set key='view_limit' value=10
                // +session_set key='view_limit' value=20
                // +session_set key='view_limit' value=50

                
                i.large.sort.icon
                +set_sort_key key='price_usd' label='price' icon='money'
                +set_sort_key key='_timestamp' label='added' icon='clock'
                // +set_sort_key key='comment_count' label='comment count' icon='chat'
                // +set_sort_key key='views' label='views' icon='eye'
                // +set_sort_key key='points' label='points' icon='line chart'
                .ui.compact.icon.button.set_sort_direction(title='toggle sort direction')
                    if sorting_up
                        i.sort.amount.down.icon
                    else
                        i.sort.amount.up.icon
                |&nbsp;
                |&nbsp;
                // .ui.compact.menu
                //     .ui.simple.dropdown.item
                //         strong #{product_limit}
                //         i.dropdown.icon
                //         .menu
                        //   +set_product_limit amount=1
                           +set_product_limit amount=5
                           +set_product_limit amount=10
                            +set_product_limit amount=20
                // .ui.inline.small.header ryan: #{ryan_total}
                // .ui.inline.small.header eric: #{eric_total}
                .spacer 
                
            .ui.large.selection.animated.list.scrolling
                each work_list
                    a.item(href="/work/#{_id}")
                        .content
                            .ui.inline.small.header 
                                img.ui.tiny.inline.image(src="{{c.url staff_image_id width=400 height=300 crop='pad'}}")
                                |#{_author_username}: 
                            img.ui.tiny.inline.image(src="{{c.url work_task.image_id width=400 height=300 crop='pad'}}")
                            if before_image_id
                                img.ui.inline.tiny.image(src="{{c.url before_image_id width=400 height=300 crop='pad'}}")
                            if after_image_id
                                img.ui.inline.tiny.image(src="{{c.url after_image_id width=400 height=300 crop='pad'}}")
                            if image_id
                                img.ui.tiny.inline.image(src="{{c.url image_id width=400 height=300 crop='pad'}}")
                            .ui.inline.small.header 
                                |#{task_title}
                            .ui.inline.small.header 
                                img.ui.tiny.inline.image(src="{{c.url location_image_id width=400 height=300 crop='pad'}}")
                                |@#{location_title}
                            | #{when}
                            small ({{long_date _timestamp}})
                            |#{task_points}pts
                        // .content
                        //     +favorite_icon_toggle
                
                
                
template(name='work_edit')
    .ui.stackable.padded.grid
        .row
            .six.wide.column
                .ui.inline.small.header
                    i.pencil.icon
                    | #{title}
                    | work edit
                with work_task
                    .ui.segment
                        img.ui.tiny.inline.image(src="{{c.url image_id width=200 height=200 gravity='face' crop='fill'}}")
                        .ui.inline.header 
                            |#{title}
                        |#{description}
                .ui.grey.header 
                    i.clock.icon
                    |#{when}
                // +text_edit key='title' label='title' direct=true
                div
                +textarea_edit key='notes' label='notes' direct=true
                // if location_id
                //     if image_id
                .ui.hidden.divider
                a.ui.massive.icon.fluid.green.button.submit_work(title='submit')
                    i.checkmark.big.icon
            .ten.wide.column
                .ui.segment
                    .ui.header
                        i.image.icon
                        |image
                    +image_edit key='before_image_id' label='before image' direct=true capture="camera"
                    +image_edit key='after_image_id' label='after image' direct=true capture="camera"
                .ui.inline.header 
                    i.red.marker.icon
                    |location
                each task_locations
                    a.ui.circular.image.link.label.pick_location.zoomer(class=location_picker_class)
                        img.ui.image(src="{{c.url image_id width=200 height=200 gravity='face' crop='fill'}}")
                        | #{title}
                .ui.red.small.fluid.button.delete_work
                    i.remove.icon   
                    | cancel
                        
                
template(name='work_view')
    .ui.stackable.padded.grid
        .row
            .four.wide.column
                a.ui.basic.icon.button.fly_right(href="/work")
                    i.wrench.large.icon
                .ui.inline.header
                    | #{title}
                    small work view
                +image_view key='image_id' label='image' direct=true
                div
                a.ui.icon.button(href="/work/#{_id}/edit")
                    i.pencil.icon
            .eight.wide.column
                a.zoomer(href="/user/#{_author_username}/")
                    img.ui.small.inline.image(src="{{c.url author.image_id width=200 height=200 gravity='face' crop='fill'}}")
                    .ui.large.inline.header #{_author_username} 
                div
                a.zoomer(href="/task/#{task_id}/")
                    img.ui.small.inline.image(src="{{c.url task_image_id width=200 height=200 gravity='face' crop='fill'}}")
                    .ui.inline.header 
                        |#{task_title}
                div
                a.zoomer(href="/location/#{location_id}/") 
                    img.ui.small.inline.image(src="{{c.url location_image_id width=200 height=200 gravity='face' crop='fill'}}")
                    .ui.inline.header @#{location_title}
                .ui.header #{when}
                div.scrolling
                    +html_view key='notes' label='directions' direct=true
                // +array_view key='tags' label='tags' icon='tags' direct=true
            .four.wide.column
                .ui.header 
                    i.checkmark.icon
                    |vouched by #{vouchers.count}
                each vouchers
                    .ui.header #{username}
                unless is_author
                    if vouched_for
                        .ui.button.vouch
                            i.checkmark.icon 
                            |vouch 
                    else
                        .ui.small.button.unvouch
                            |unvouch
                .ui.header #{task_points} pts earned
                                                
                                                
template(name='role_card')
    if youtube_id 
        +youtube_view key='youtube_id' direct=true
    .content
        .ui.inline.header #{title}
        if private 
            i.large.lock.icon
        .smallscroll
            |!{content}
        // +comments_view_small
        div
        +eft_viewer_small


template(name='set_role_sort_key')
    .item.set_sort
        if color
            .ui.label(class=color) #{label}
        else 
            if emoji
                em(data-emoji=emoji)
            else if icon
                i.icon(class=icon)
            |#{label}
        
        
template(name='set_view_mode_role')
    .item.set_view
        i.icon(class=icon)
        |#{title}


// template(name='set_limit')
    .ui.compact.small.basic.button.set_limit #{amount}



        
template(name='role_item')
    .ui.fluid.segment.view_role.pointer
        a.ui.header(href="/role/#{_id}") #{title}
        div
        .ui.small.grey.inline.header #{when}
        | #{content}
        each tags 
            .ui.basic.small.label #{this}
        

template(name='role_view')
    .ui.stackable.padded.grid
        .three.column.row 
            .column
                .ui.header #{title}
                // div
                // .ui.inline.grey.header {{from_now start_datetime}}
                .ui.segment
                    .ui.header 
                        small author
                    a.ui.header(href="/user/#{_author.username}") 
                        img.ui.avatar.image(src="{{c.url _author.image_id height=200 width=200 gravity='face' crop='fill'}}" class=currentUser.invert_class)
                        |#{_author.username}
            .column
                .ui.small.grey.header 
                    i.line.chart.icon
                    |stats
                .ui.list
                    .item #{views} views
                each viewers
                    .ui.label #{username}
                +array_view key='badge_titles' label='badges' direct=true
                +eft_viewer
                //- +array_view key='location_tags' label='location_tags' direct=true
            .column
                img.ui.image(src="{{c.url image_id }}" class=currentUser.invert_class)
                // a.ui.header(href="/user/#{target.username}")
                //     |#{target.username}
                if youtube_id 
                    +youtube_view key='youtube_id' direct=true
                |!{content}
                div 
            // .four.wide.column
                //- .ui.fluid.green.button.submit
                //-     i.checkmark.icon
                //-     |submit
                    
                    
                    
template(name='role_edit')
    .ui.stackable.padded.grid
        .three.column.row 
            .column
                .ui.inline.header 
                    +icolor name='news' cl='ui image inline pointer'
                    |edit role
                a.ui.icon.green.big.button(href="/role/#{_id}" title='save')
                    i.checkmark.big.icon
                +text_edit key='title' label='title' direct=true
            .column
                +html_edit key='content' label='content' direct=true
                +youtube_edit key='youtube_id' label='youtube id' direct=true
            .column
                .ui.header required badges
                +badge_picker
                +tasks_field
            .column
                +model_picker model='event' icon='calendar'
                
                i.large.link.red.remove.icon.delete_role
            .column
                .ui.header 
                    small owner - each id should be stored in user account or as nft in crypto wallet.
                .ui.header 
                    small author
                    |#{_author.username}
                .ui.basic.center.aligned.segment
                    +eft_picker color="FF73EA" icon='food' label='food'
                    +eft_picker color="B785E1" icon='home' label='housing'
                    +eft_picker color="7229AF" icon='tshirt' label='clothing'
                    +eft_picker color="1255B8" icon='car' label='transportation'
                    +eft_picker color="83DFF4" icon='lightning' label='energy'
                    +eft_picker color="42E8C4" icon='leaf' label='zero waste'
                    +eft_picker color="40C057" icon='smile' label='wellness'
                    +eft_picker color="FAB005" icon='university' label='education'
                    +eft_picker color="FD7E14" icon='paint brush' label='art'
                    +eft_picker color="FF0000" icon='users' label="community core \n"
            .column
                if is_dev
                    +single_user_edit key='_author_id' label='author' direct=true
                +image_edit key='image_id' label='image' direct=true
                div 
                +array_edit key='tags' label='tags' direct=true icon='tags'
                 +boolean_edit key='published' icon='visible' direct=true
                if is_dev 
                    +text_edit key='model' label='model' direct=true
            .column
                div
                +html_edit key='responsibilities' label='responsibilities'
                div
                +array_edit key='location_tags' label='location_tags' direct=true
                // unless published
                //     a.ui.fluid.green.button.submit(href="/save")
                //         i.checkmark.icon
                //         |publish
                // else
                //     .ui.basic.button.unpublish 
                //         |unpublish
            .column
                .ui.header
                    |audience
                +boolean_edit key='private' label='private' 
                if private 
                    +multi_user_edit key='access_user_ids' label='user picker' direct=true
            .column
                +group_picker
                +array_edit key='skills' label='skills' icon='wrench' direct=true
            .column
                +model_picker model='skill' icon='wrench'


template(name='resource_card')
    // .ui.card(class=resource_card_class)
    .content
        // if image_link
        //     img.ui.zoomer.pointer.goto_resource.image(src=image_link)
        div
        .ui.inline.header 
            |#{daily_rate}
            small p/day
        if tags
            i.tag.icon
        each tags
            a.ui.small.link.black.label.flat_pick_tag.spaced #{this}
        .right.floated.meta
            | added #{when}
        +author_info
        
        
template(name='resource_big_card')
    .ui.fluid.segment
        .ui.fluid.two.column.grid(class=resource_card_class)
            .column
                a.image.fly_right(href="/resource/#{_id}/") 
                    if image_id
                        img.ui.zoomer.pointer.goto_resource.image(src="{{c.url image_id width=400 height=300 crop='pad'}}")
                    if image_link
                        img.ui.zoomer.pointer.goto_resource.image(src=image_link)
            .column
                a.header.zoomer.fly_right(href="/resource/#{_id}/") 
                    | #{title}
                div
                .ui.inline.header 
                    |#{daily_rate}
                    small p/day
                +array_view key='tags'
                unless anonymous
                    a(href="/user/#{_author_username}")
                        img.ui.avatar.image(src="{{c.url _author.image_id width=400 height=600 crop='fit'}}")
                        |#{_author_username}
                // +quickbuy day_diff=0
                +quickbuy day_diff=1
                +quickbuy day_diff=2
                +quickbuy day_diff=3
                +quickbuy day_diff=4
                +quickbuy day_diff=5



template(name='set_resource_sort_key')
    .item.set_sort
        if color
            .ui.label(class=color) #{label}
        else 
            if emoji
                em(data-emoji=emoji)
            else if icon
                i.icon(class=icon)
            |#{label}
        

template(name='set_view_mode_resource')
    .item.set_view
        i.icon(class=icon)
        |#{title}


template(name='set_resource_limit')
    .item.set_limit #{amount}
    
    

// .ui.header resource view
template(name='resource_view')
    .ui.stackable.padded.grid
        //- img.ui.large.rounded.image(src="{{c.url image width=500 height=500 gravity='face' crop='fill'}}")
        .three.column.row
            .column
                // .ui.header 
                //     small viewing
                //     |#{title}
                //     small resource
                .ui.big.header #{title}
                if can_edit
                    a.zoomer(href="/resource/#{_id}/edit")
                        i.pencil.big.circular.icon
                div
                +text_view key='location' icon='marker' label='location' 
                .ui.hidden.divider
                if image_id
                    img.ui.centered.rounded.shadowed.fluid.image(src="{{c.url image_id crop='fit'}}")
                if image_link
                    img.ui.centered.rounded.shadowed.fluid.image(src=image_link)

                .ui.hidden.divider
                i.large.tag.icon        
                each tags 
                    a.ui.compact.button.goto_tag
                        |#{this}
                div
                .ui.header 
                    +i name='order-history'
                    |#{past_order_docs.count}
                    |past orders
                .ui.selection.animated.large.middle.aligned.divided.list
                    each past_order_docs
                        .item
                            .right.floated.content
                                a(href="/order/#{_id}")
                                    i.chevron.right.circular.icon
                            .content
                                a(href="user/#{_author_username}")
                                    | #{_author_username}
                                    small for
                                    |#{order_date}
            .column
                .ui.header #{daily_rate}p/day
                //- unless is_author
                // .ui.big.green.fluid.button.new_order 
                //     i.large.clock.icon
                //     small reserve for 
                //     strong #{daily_rate}p/day
                // +quickbuy day_diff=0
                +quickbuy day_diff=1
                +quickbuy day_diff=2
                +quickbuy day_diff=3
                +quickbuy day_diff=4
                +quickbuy day_diff=5
                div
                if description.length
                    +html_view key='description' label='description' icon='content' 
                div
                .ui.small.list
                    .item total earnings
                    .item resource ranking #orders
                    .item resource ranking $ earned
                    .item # different renters
                    .item avg resource time
                    .item avg daily earnings
                    .item avg weekly earnings
                    .item avg monthly earnings
                    .item biggest renter
                    .item predicted payback duration
                    .item predicted payback date
            .column
                .ui.header 
                    +i name='clock'
                    |#{future_order_docs.count}
                    |future orders
                .ui.link.large.divided.middle.aligned.list
                    each future_order_docs
                        .item
                            .right.floated.content
                                a(href="/order/#{_id}")
                                    i.chevron.right.circular.icon
                                if can_edit
                                    i.red.circular.cancel.link.icon.zoomer.cancel_order
                            .content
                                a(href="/user/#{_author_username}")
                                    img.ui.avatar.image(src="{{c.url _author.image_id width=200 height=200 crop='crop'}}")
                                    | #{_author_username}
                                small for
                                |#{order_date}, {{from_now order_date}}
                +resource_stats
                // +last_viewed


template(name='quickbuy')
    .ui.green.button.buy(class=button_class)
        i.lightning.icon
        | #{human_form}
        small #{from_form}
        

template(name='resource_edit')
    .ui.stackable.padded.grid
        .three.column.row
            .column
                .ui.inline.header
                    small editing
                    |'#{title}'
                    small resource
                +text_edit key='title' icon='header' 
                +number_edit key='daily_rate' label='daily rate' icon='exchange' 
                .ui.icon.small.red.button.delete_resource_item 
                    i.trash.icon
            .column
                +key_value_edit key='category' value='clothing' icon='tshirt'
                +key_value_edit key='category' value='housing' icon='home'
                if in_dev
                    +print_this
                +boolean_edit key='published' label='published' icon='checkmark'
                +boolean_edit key='anonymous' label='anonymous' icon='visible'
                div
                // a.ui.header.pointer.refresh_gps(href='#') 
                //     |gps coords
                // .ui.label #{lat}
                // .ui.label #{long}
                +text_edit key='location' label='location text' icon='marker' 
                +geolocate_button
                +html_edit key='description' label='description' icon='content' 
            .column
                +array_edit key='tags' icon='tags' label='tags' 
                +array_edit key='location_tags' label='public location tags' icon='marker' 
                +array_edit key='private_location_tags' label='private location tags' icon='marker'  tooltip='for handlers and buyers who are picking up'
                +image_edit key='image_id' label='image' 
                +image_link_edit key='image_link' label='image link' 


    
template(name='profile_resource_item')
    .ui.segment.grid
        .row
            .three.column
                +image_view key='image'  cl='zoom ui tiny image'
            .twelve.wide.column
                .ui.header #{title}
                a.ui.header.inline.lowercase(href="/resource/#{_id}/")
                    |#{daily_rate}p/day
                .ui.small.inline.header #{when}
                a.ui.button(href="/resource/#{_id}/")
                    |view
                    i.right.chevron.icon




template(name='sort_item')
    .item.set_sort #{label}
    
    
    

                    
                    
template(name='last_viewed')
    i.large.grey.eye.icon
    .ui.inline.small.header last viewed {{long_date last_viewed_timestamp}}
    .ui.inline.small.header {{from_now last_viewed_timestamp}}
                    
                    

template(name='resource_stats')
    //- .ui.accordion
    //-     .title
    .ui.grey.header.refresh_resource_stats
        i.line.chart.icon
        |stats
    //- .content
    .ui.big.list
        .item #{views} views
        .item #{order_count} orders
        .item #{total_earnings}p/#{total_resource_hours}hrs total
        // .item #{average_resource_cost}c / #{average_resource_duration}hrs avg resource
        //- .item resource ranking # orders
        //- .item resource ranking $ earned
        //- .item # different renters
        //- .item avg daily earnings
        //- .item avg weekly earnings
        //- .item avg monthly earnings
        //- .item biggest renter
        //- .item predicted payback duration 
        //- .item predicted payback date 
    //-     //- .ui.header res slot exists
    //-     +order_slot_template
    //- else
    //-     if is_product_author
    //-         .ui.button.new_slot
    //-             |new slot
        
    
template(name='set_date_filter')        
    .ui.button.set_date_filter(class=date_filter_class)
        |#{label}
        
        

template(name='order_segment')
    .ui.segment
        a.ui.small.header.inline.lowercase(href="/order/#{_id}/")
            small from 
            |{{cal_time start_datetime}}
            //- |{{cal_time start_datetime}} [#{start_date}, hour: #{start_hour}]
            //- |{{long_date start_datetime}}
            small to 
            |{{cal_time end_datetime}}
        //- .ui.inline.header #{_author_username}
        .ui.inline.header #{author.name}
        .ui.grey.inline.header #{hour_duration}hrs
        .ui.grey.inline.header(title='credits')
            | $#{cost}
        .ui.small.inline.header #{when} by #{_author_username}
        a.ui.large.button(href="/order/#{_id}/")
            |view
            i.right.chevron.icon
                
                
                
template(name='project_card')
    a.ui.card.fly_right(href="/project/#{_id}")
        if youtube_id 
            +youtube_view key='youtube_id' direct=true
        if image_id 
            +image_view key='image_id' direct=true
        .content
            .ui.inline.header #{title}
            if private 
                i.large.lock.icon
            .smallscroll
                |!{content}
                .ui.label 
                    i.user.icon
                    |#{_author_username}
                i.tag.icon
                each tags 
                    .ui.basic.label #{this}
            .ui.small.grey.header
                i.clock.icon
                |#{when}
            // +comments_view_small
            +author_info
            +array_view key='role_titles' label='roles' icon='shield' direct=true


template(name='set_project_sort_key')
    .item.set_sort
        if color
            .ui.label(class=color) #{label}
        else 
            if emoji
                em(data-emoji=emoji)
            else if icon
                i.icon(class=icon)
            |#{label}
        
        
                
template(name='set_view_mode_project')
    .item.set_view
        i.icon(class=icon)
        |#{title}


// template(name='set_limit')
    .ui.compact.small.basic.button.set_limit #{amount}



        

template(name='project_view')
    .ui.stackable.grid
        .row 
            .four.wide.column
                .ui.basic.segment
                    // div
                    // .ui.inline.grey.header {{from_now start_datetime}}
                    
                    if can_edit
                        a.ui.circular.icon.button.edit_project(href="/project/#{_id}/edit" title='edit')
                            i.big.link.pencil.icon
                    .ui.segment
                        .ui.header 
                            small author
                        a.ui.header(href="/user/#{_author.username}") 
                            img.ui.avatar.image(src="{{c.url _author.image_id height=200 width=200 gravity='face' crop='fill'}}" class=currentUser.invert_class)
                            |#{_author.username}
                    .ui.small.grey.header 
                        i.line.chart.icon
                        |stats
                    +array_view key='role_titles' label='roles' icon='shield' direct=true
                    +array_view key='task_titles' label='tasks' icon='tasks' direct=true
                    .ui.header 
                        +i name='tasks'
                        |task ids (children)
                    each task_ids
                        +child_task
                        a.ui.large.label(href="/task/#{this}") #{this}
                    .ui.header dynamic
                    each child_tasks
                        +child_task
                        // a.ui.large.label(href="/task/#{this}") #{this}
                    //- +array_view key='location_tags' label='location_tags' direct=true
            .twelve.wide.column.scrolling
                img.ui.image(src="{{c.url image_id }}" class=currentUser.invert_class)
                // a.ui.header(href="/user/#{target.username}")
                //     |#{target.username}
                if youtube_id 
                    +youtube_view key='youtube_id' direct=true
                |!{content}
                div 
            // .four.wide.column
                //- .ui.fluid.green.button.submit
                //-     i.checkmark.icon
                //-     |submit
                    
                    
                    
template(name='child_task')
    .ui.header #{title}
                    
                    
template(name='project_edit')
    .ui.stackable.padded.grid
        .row 
            .ten.wide.column
                .ui.inline.header 
                    +icolor name='news' cl='ui image inline pointer'
                    |edit project
                a.ui.icon.green.big.button(href="/project/#{_id}" title='save')
                    i.checkmark.big.icon
                +text_edit key='title' label='title' direct=true
                +html_edit key='content' label='content' direct=true
                +youtube_edit key='youtube_id' label='youtube id' direct=true
                // +array_edit key='roles' label='roles' icon='shield' direct=true
            .six.wide.column.scrolling
                // +array_edit key='tasks' label='tasks'
                i.large.link.red.remove.icon.delete_project
                .ui.header 
                    small author
                    |#{_author.username}
                if is_dev
                    +single_user_edit key='_author_id' label='author' direct=true
                +image_edit key='image_id' label='image' direct=true
                div 
                +text_edit key='location' 
                +geolocate_button
                
                +array_edit key='tags' label='tags' direct=true icon='tags'
                +boolean_edit key='published' icon='visible' direct=true
                if is_dev 
                    +text_edit key='model' label='model' direct=true
                +array_edit key='location_tags' label='location_tags' direct=true
                // unless published
                //     a.ui.fluid.green.button.submit(href="/save")
                //         i.checkmark.icon
                //         |publish
                // else
                //     .ui.basic.button.unpublish 
                //         |unpublish
                .ui.header
                    |audience
                +boolean_edit key='private' label='private' 
                if private 
                    +multi_user_edit key='access_user_ids' label='user picker' direct=true
                +group_picker
                +roles_field
                +tasks_field
                

