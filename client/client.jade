head
    title Gratigen
    meta(name='viewport', content='user-scalable=yes, initial-scale=1.0, maximum-scale=2.0, width=device-width')
    meta(name='apple-mobile-web-app-capable', content='yes')
    meta(name='apple-mobile-web-app-status-bar-style', content='black')
    
    link(rel="apple-touch-icon" sizes="120x120" href="/apple-touch-icon.png")
    link(rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png")
    link(rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png")

    link(rel="mask-icon" href="/safari-pinned-tab.svg" color="#5bbad5")
    meta(name="apple-mobile-web-app-title" content="gratigen")
    meta(name="application-name" content="gratigen")
    meta(name="msapplication-TileColor" content="#da532c")
    meta(name="theme-color" content="#000000")
    
    
    
    link(rel='stylesheet' type='text/css' href='https://cdn.jsdelivr.net/npm/fomantic-ui@2.9.0/dist/semantic.min.css')
    link(href="https://fonts.googleapis.com/css?family=Raleway&display=swap" rel="stylesheet")
    link(href="https://fonts.googleapis.com/css?family=Varela+Round&display=swap" rel="stylesheet")
    link(href="https://fonts.googleapis.com/css?family=Ubuntu:300,400&display=swap" rel="stylesheet")
    link(rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png")
    link(rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png")
    link(rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png")
    link(rel="manifest" href="/site.webmanifest")
    link(href="https://cdn.jsdelivr.net/npm/suneditor@latest/dist/css/suneditor.min.css" rel="stylesheet")
    // link(rel='stylesheet', href='/layerslider/css/layerslider.css', type='text/css')
    // link(rel="stylesheet" href="https://unpkg.com/leaflet@1.9.3/dist/leaflet.css"
    //      integrity="sha256-kLaT2GOSpHechhsozzB+flnD+zUyjE2LlfWPgU04xyI="
    //      crossorigin="")

    // script(src="https://unpkg.com/leaflet@1.9.3/dist/leaflet.js"
    //      integrity="sha256-WBkoXOwTeyKclOHuWtc+i2uENFpDZ9YPdf5Hf+D7ewM="
    //      crossorigin="")
    // <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.3/dist/leaflet.css" integrity="sha256-kLaT2GOSpHechhsozzB+flnD+zUyjE2LlfWPgU04xyI=" crossorigin=""/>
    // <script src="https://unpkg.com/leaflet@1.9.3/dist/leaflet.js" integrity="sha256-WBkoXOwTeyKclOHuWtc+i2uENFpDZ9YPdf5Hf+D7ewM=" crossorigin=""></script>

    
    
    // script(src='./qrcode.min.js')
    script(src='https://cdn.jsdelivr.net/npm/jquery@3.6.1/dist/jquery.min.js')
    script(src='https://cdn.jsdelivr.net/npm/fomantic-ui@2.9.0/dist/semantic.min.js')
    
    // script(src='https://api.mapbox.com/mapbox.js/v3.3.1/mapbox.js')
    // link(href='https://api.mapbox.com/mapbox.js/v3.3.1/mapbox.css' rel='stylesheet')
    
    // this one
    // script(src='https://api.mapbox.com/mapbox-gl-js/v2.11.0/mapbox-gl.js')
    // link(href='https://api.mapbox.com/mapbox-gl-js/v2.11.0/mapbox-gl.css' rel='stylesheet')
    
    // script(src='https://api.mapbox.com/mapbox-gl-js/v2.6.0/mapbox-gl.js')
    // link(href='https://api.mapbox.com/mapbox-gl-js/v2.6.0/mapbox-gl.css' rel='stylesheet')

    
    
    //- // External libraries: GreenSock
    // - /* script(src='/layerslider/js/jquery.js', type='text/javascript') */
    
    
    script(src="https://cdn.jsdelivr.net/npm/sweetalert2@9")
    script(src="https://cdn.jsdelivr.net/npm/suneditor@latest/dist/suneditor.min.js")
    script(src="https://cdn.jsdelivr.net/npm/suneditor@latest/src/lang/en.js")

    //- script(async='', src='https://www.googletagmanager.com/gtag/js?id=UA-140259454-1')
    script.
        window.dataLayer = window.dataLayer || [];
        function gtag(){dataLayer.push(arguments);}
        gtag('js', new Date());
        
        gtag('config', 'G-GLYPPRGJFQ');

    script.
        $(window).on("load",function(){
            $(".loader-wrapper").fadeOut("slow");
        });

body
    +app


template(name='app')
    // if currentUser
    +nav
    +Template.dynamic template=ct
    // +home
    // else 
    //     +login
    
    
    
    
template(name='layout')
    // .ui.flyout
    //     i.close.icon
    //     .ui.header hi
    //     .image.content
    //         .ui.header content
    //     .actions
    //         .ui.button hi
    // .loader-wrapper
    //     span.loader
    //         span.loader-inner
    div(class=invert_class)
        +nav
        if currentUser.show_leftbar
            +leftbar
        if currentUser.show_rightbar
            +rightbar
        +yield
    // img.ui.fluid.image.home_banner(src="{{c.url 'frontrange'}}" class=darkmode_class)
    // #main.ui.bottom.attached.pushable.segment.scrolling
        // +topbar
    +footer


template(name='mlayout')
    .global_container(class=invert_class)
        unless is_frontdesk
            +nav
        //- img.ui.fluid.image.checkin_banner(src="{{c.url 'frontrange' width=1000 height=1000 crop='crop'}}")    
        +yield


template(name='dashboard')
    // .ui.padded.stackable.grid
    //     .ui.big.button

template(name='not_found')
    .ui.center.aligned.padded.basic.segment
        +ibig name='park-bench' 
            |browser_back
        .ui.center.aligned.header page not found
        a.ui.big.basic.button(href="/") 
            +i name='home' 
            // |home
        .ui.basic.big.button.browser_back
            i.large.undo.icon
            |go back


template(name='shortcut_modal')
    .ui.shortcut.modal
        .ui.header keyboard shortcuts
        .content
            .ui.large.list
                each shortcuts
                    .item 
                        .header #{combo}
                        .content #{action}


template(name='footer')
    .ui.segment.grid
        .eight.wide.column.smallscroll
            .ui.header 
                i.shield.icon
                |footer 
            .ui.header 
                i.users.icon 
                |users
            each user_docs 
                .ui.large.button #{username}
        .eight.wide.column.smallscroll
            .ui.header 
                i.database.icon
                |docs 
            each doc_docs
                a.ui.large.button(href="/m/#{model}/#{_id}") #{title} 
                    .ui.label
                        |#{model}
                        
                        
                        
template(name='add')
    .ui.padded.grid 
        .sixteen.wide.center.aligned.column
            .ui.header 
                i.large.play.icon 
                |add new doc
            each model_docs_helper 'model'
                    +add_model_doc_button 
            
template(name='add_model_doc_button')
    .ui.big.basic.button.add_model_doc.zoomer
        +i name=icon color=stripped_icon_color
        |#{title}