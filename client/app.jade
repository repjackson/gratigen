head
    title Gratigen
    meta(name='viewport', content='user-scalable=yes, initial-scale=1.0, maximum-scale=2.0, width=device-width')
    meta(name='apple-mobile-web-app-capable', content='yes')
    meta(name='apple-mobile-web-app-status-bar-style', content='black')
    
    link(rel="apple-touch-icon" sizes="120x120" href="/apple-touch-icon.png")
    link(rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png")
    link(rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png")

    link(rel="mask-icon" href="/safari-pinned-tab.svg" color="#5bbad5")
    meta(name="apple-mobile-web-app-title" content="gratigen")
    meta(name="application-name" content="gratigen")
    meta(name="msapplication-TileColor" content="#da532c")
    meta(name="theme-color" content="#000000")
    
    
    
    link(rel='stylesheet' type='text/css' href='https://cdn.jsdelivr.net/npm/fomantic-ui@2.9.0/dist/semantic.min.css')
    link(href="https://fonts.googleapis.com/css?family=Raleway&display=swap" rel="stylesheet")
    link(href="https://fonts.googleapis.com/css?family=Varela+Round&display=swap" rel="stylesheet")
    link(href="https://fonts.googleapis.com/css?family=Ubuntu:300,400&display=swap" rel="stylesheet")
    link(rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png")
    link(rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png")
    link(rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png")
    link(rel="manifest" href="/site.webmanifest")
    link(href="https://cdn.jsdelivr.net/npm/suneditor@latest/dist/css/suneditor.min.css" rel="stylesheet")
    // link(rel='stylesheet', href='/layerslider/css/layerslider.css', type='text/css')
    // link(rel="stylesheet" href="https://unpkg.com/leaflet@1.9.3/dist/leaflet.css"
    //      integrity="sha256-kLaT2GOSpHechhsozzB+flnD+zUyjE2LlfWPgU04xyI="
    //      crossorigin="")

    // script(src="https://unpkg.com/leaflet@1.9.3/dist/leaflet.js"
    //      integrity="sha256-WBkoXOwTeyKclOHuWtc+i2uENFpDZ9YPdf5Hf+D7ewM="
    //      crossorigin="")
    // <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.3/dist/leaflet.css" integrity="sha256-kLaT2GOSpHechhsozzB+flnD+zUyjE2LlfWPgU04xyI=" crossorigin=""/>
    // <script src="https://unpkg.com/leaflet@1.9.3/dist/leaflet.js" integrity="sha256-WBkoXOwTeyKclOHuWtc+i2uENFpDZ9YPdf5Hf+D7ewM=" crossorigin=""></script>


    link(rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/smoothness/jquery-ui.css")
    script(src="https://unpkg.com/topojson@3")
    script(src='https://d3js.org/d3.v4.min.js')

    
    
    // script(src='./qrcode.min.js')
    script(src='https://cdn.jsdelivr.net/npm/jquery@3.6.1/dist/jquery.min.js')
    script(src='https://cdn.jsdelivr.net/npm/fomantic-ui@2.9.0/dist/semantic.min.js')
    
    // script(src='https://api.mapbox.com/mapbox.js/v3.3.1/mapbox.js')
    // link(href='https://api.mapbox.com/mapbox.js/v3.3.1/mapbox.css' rel='stylesheet')
    
    // this one
    // script(src='https://api.mapbox.com/mapbox-gl-js/v2.11.0/mapbox-gl.js')
    // link(href='https://api.mapbox.com/mapbox-gl-js/v2.11.0/mapbox-gl.css' rel='stylesheet')
    
    // script(src='https://api.mapbox.com/mapbox-gl-js/v2.6.0/mapbox-gl.js')
    // link(href='https://api.mapbox.com/mapbox-gl-js/v2.6.0/mapbox-gl.css' rel='stylesheet')

    
    
    //- // External libraries: GreenSock
    // - /* script(src='/layerslider/js/jquery.js', type='text/javascript') */
    
    
    script(src="https://cdn.jsdelivr.net/npm/sweetalert2@9")
    script(src="https://cdn.jsdelivr.net/npm/suneditor@latest/dist/suneditor.min.js")
    script(src="https://cdn.jsdelivr.net/npm/suneditor@latest/src/lang/en.js")

    //- script(async='', src='https://www.googletagmanager.com/gtag/js?id=UA-140259454-1')
    script.
        window.dataLayer = window.dataLayer || [];
        function gtag(){dataLayer.push(arguments);}
        gtag('js', new Date());
        
        gtag('config', 'G-GLYPPRGJFQ');

    // script.
    //     $(window).on("load",function(){
    //         $(".loader-wrapper").fadeOut("slow");
    //     });
    script(type="module")
        import * as d3 from "https://cdn.jsdelivr.net/npm/d3@7/+esm";
        const div = d3.selectAll("div");
    

body
    +leftbar
    +rightbar
    +global_modal
    +global_flyout
    +chat_flyout
    // if currentUser.show_modelbar
    +modelbar
    .pusher
        +app


template(name='app')
    if Template.subscriptionsReady
        +nav
        +delta_nav
        // #draggable
        // if currentUser.show_leftbar
        // if currentUser.show_rightbar
        if currentUser.delta_id
            // .ui.small.compact.attached.menu.hscroll
            // .icon.item(title="#{doc_history.length} node history")
            // .ui.hidden.divider
            // .ui.bottom.attached.tab.segment.centered(data-tab=current_delta._id)
            i.large.clock.icon(title='node history')
            .ui.breadcrumb.hscroll
                each current_delta._doc_history.reverse
                    +doc_history_button
        .layout.scrolling
            with currentUser
                // if ct.length
                +Template.dynamic template=ct
            else 
                .ui.center.aligned.basic.segment 
                    i.massive.yin.yang.loading.grey.icon
            //     +login
        +footer
    else 
        i.massive.asterisk.loading.blue.icon
    
template(name='doc_history_button')
    with doc_from_id
        a.section.goto_doc.zoomer(title=model)
            with parent_model
                +i name=icon color=stripped_icon_color cl='ui avatar image'
            if image_id
                img.ui.avatar.image(src="{{c.url image_id width=300 height=300 gravity='face' crop='fill'}}")
            |{{truncated title}}
            // i.remove.link.icon.delete_history_item.zoomer(title='remove history record')
            i.right.chevron.icon.divider
    
template(name='global_flyout')
    with flyout_doc
        .ui.flyout
            i.close.icon
            .ui.header #{title}
            if image_id
                .image.content
                    img.ui.image(src="{{c.url image_id }}")
            .actions
                .ui.button hi

template(name='chat_flyout')
    with current_delta
        .ui.chat.right.flyout
            i.close.large.link.icon.zoomer(title='close panel')
            .ui.header 
                i.chat.outline.icon(class=color)
                |#{name} session chat
            .ui.segment.content.scrolling(class=color)
                +comments
                +image_edit key='image_id' direct=true
                +text_edit key='name' direct=true
                +text_edit key='color' direct=true
                each delta_users 
                    +user_card
                
                if image_id
                    .image.content
                        img.ui.image(src="{{c.url image_id }}")
            .actions
                .ui.blue.button.invert 
                    i.pencil.icon
                    |edit session 
                .ui.red.button.invert
                    i.trash.icon
                    |delete session 



template(name='shortcut_modal')
    .ui.shortcut.modal
        .ui.header keyboard shortcuts
        .content
            .ui.large.list
                each shortcuts
                    .item 
                        .header #{combo}
                        .content #{action}


template(name='chart')
    .ui.header chart
    svg#chart.chart

template(name='global_modal')
    with modal_doc
        .ui.modal.global
            .ui.header #{title}
            .content
                .ui.header #{body}
                .ui.label #{model}

template(name='footer')
    // if currentUser.admin_mode
    .ui.segment.grid
        .eight.wide.column.smallscroll
            .ui.header 
                i.shield.icon
                |footer 
            with current_delta
                +comments
                +text_edit key='_template' label='_template' direct=true
                div
                +text_edit key='_model' label='_model' direct=true
                div
                +text_edit key='_doc_id' label='_doc_id' direct=true
                +boolean_edit key='show_leftbar' label='leftbar' direct=true
                +boolean_edit key='show_rightbar' label='rightbar' direct=true
                +boolean_edit key='show_modelbar' label='sidebar modelbar' icon='cubes' direct=true
                +boolean_edit key='show_secnav' label='secnav modelbar' icon='network' direct=true
                
            .ui.header 
                i.users.icon 
                |users
            each user_docs 
                .ui.large.button #{username}
        .eight.wide.column.smallscroll
            .ui.header 
                i.database.icon
                |#{doc_docs.count} docs 
            .smallscroll
                each doc_docs
                    a.ui.compact.small.button.print_me #{title} 
                        .ui.label
                            |#{model}
                            
                            
                        
template(name='add')
    .ui.padded.grid 
        .sixteen.wide.center.aligned.column
            .ui.header 
                i.large.play.icon 
                |add new doc
            each model_docs_helper 'model'
                    +add_model_doc_button 
            
template(name='add_model_doc_button')
    .ui.big.basic.button.add_model_doc.zoomer
        +i name=icon color=stripped_icon_color
        |#{title}
        
        
        
template(name='nav')
    // https://fomantic-ui.com/elements/icon.html#/icon
    //#topnav.topnav
    #topnav.ui.attached.menu.topnav.hscroll.ani(class=invert_class)
        a.icon.item.toggle_leftbar.zoomer(title='toggle leftbar')
            i.bars.large.icon
        a.header.image.item.zoomer.set_home(class="{{isActivePath 'home'}}" title='gratihome')
            if is_loading
                .icon.item
                    i.big.loading.grey.refresh.icon.cancel
            else 
                img.ui.mini.circular.image.zoomer(src="/logo.png")
            // span.mobile.hidden Gratigen
        a.icon.item.toggle_modelbar.zoomer(class=modelbar_class)
            i.cubes.large.icon
        a.icon.item.toggle_taskbar.zoomer(class=taskbar_class)
            i.tasks.large.icon
        a.icon.item.toggle_orgbar.zoomer(class=orgbar_class)
            i.fire.large.icon
            
        if currentUser.admin
            +toggle_nav_item key='admin_mode' icon='shield' label='admin mode'
        // +nav_item template='users' icon='users' label='users' hide_label=true
        // +nav_item template='reddit' icon='reddit' label='reddit'

        // +nav_item template='/m/model' icon='cubes' label='models'
        // a.icon.item.zoomer(href='/m/model' title='delta')
        //     i.large.database.icon
        // if currentUser.admin_mode
        //     +nav_item template='dev' icon='network' label='dev'
        // .item
        //     with model_doc 'global'
        //         |#{latest_info}
        //         if currentUser.admin_mode
        //             +text_edit key='latest_info' direct=true
        // .ui.input.item
        .input.item
            .ui.icon.large.input.search_bar
                input.global_search(type='text' placeholder='add/request/search...')
                i.search.icon

        // a.icon.item.zoomer.goto_add.toggle_addbar(title='add new doc')
        a.icon.item.zoomer.toggle_addbar(title='add new doc')
            i.large.play.circular.icon
        +toggle_nav_item key='invert_mode' icon='lightbulb' label='invert mode'
        .right.menu
            if unread_count
                a.item.alerts.select_term(href="#" class=alert_toggle_class)
                    i.large.bell.icon
                    if unread_count
                        |#{unread_count}
            else
                a.icon.item(href="/inbox" class="{{is_active_template 'inbox'}}")
                    i.large.outline.bell.icon
            a.icon.item.zoomer.popout_chat
                if unread_chat_messages
                    i.large.teal.chat.icon
                    small #{unread_chat_messages.count}
                else 
                    i.large.chat.outline.icon
            if currentUser
                // a.item(href="/user/#{currentUser.username}/credit" class="{{is_active_template regex='user_credit'}}" title='your credits')
                a.item.toggle_cartbar(title='current cart balance')
                    |#{currentUser.cart_item_count}
                    i.shopping.cart.large.icon
                a.item.toggle_coinbar(title='current wallet balance')
                    i.coins.large.icon
                    |&nbsp;
                    |#{currentUser.points}p
                a.item.goto_profile(class=user_nav_button_class title='profile')
                    if currentUser.image_id
                        img.ui.avatar.image(src="{{c.url currentUser.image_id width=200 height=200 gravity='face' crop='fill'}}")
                    else
                        i.user.icon
                    strong #{currentUser.name}
                a.icon.item.toggle_rightbar.no_blink
                    // .ui.avatar.image
                    //     if currentUser.image_id
                    //         img.ui.mini.inline.image(src="{{c.url currentUser.image_id width=200 height=200 gravity='face' crop='fill'}}")
                    //     else
                    //         i.user.large.icon
                    // strong.mobile.hidden #{currentUser.name}
                    i.bars.large.grey.icon
            unless subs_ready
                .icon.item
                    i.fork.large.loading.icon
            unless currentUser
                a.item.goto_template(data-template='register' title='register')
                    +i name='plus'
                    span.mobile.hidden register            
                a.item.goto_template(data-template='login' title='login') 
                    // i.sign.in.large.icon
                    +i name='internal'
                    span.mobile.hidden login
            if currentUser.viewing_coinbar
                +coinbar
    if currentUser.show_secnav
        +secnav
                
                
template(name='toggle_nav_item')
    a.icon.item.toggle(class=toggle_item_class title="toggle #{label}")
        i.big.icon(class=icon)
        // +i name=icon color='ffffff' cl='ui avatar image'
          
          
template(name='delta_nav')
    // .ui.top.attached.tabular.menu  
    //     a.center.item.toggle_addmode.zoomer(data-tab='add' title='add thing')
    //         +i name='play-button-circled--v1' color='40C057'
        // .active.item(data-tab='viewing')
        //     |viewing
    .ui.attached.tabular.menu.hscroll
        .item 
            i.window.restore.icon
            |sessions
        a.item.add_session(title='new session')
            i.plus.icon
        each model_docs_helper 'delta' 
            // a.item.pick_delta.pointer.zoomer(data-tab="#{_id}" class=delta_item_class title="switch to #{name} session")
            a.item.pick_delta.pointer.zoomer(data-tab="#{_id}" class="{{delta_item_class}} {{color}}")
                if editing_delta
                    +text_edit key='name' direct=true
                else 
                    |#{name}
                |&nbsp;
                each delta_users 
                    img.ui.avatar.image.supazuma(src="{{c.url image_id width=200 height=200 gravity='face' crop='fill'}}" title=username)

    //   border: 0px solid #d4d4d5;



template(name='secnav')
    // .input.item 
    //     .ui.input 
    //         input(type='text')
    .ui.attached.small.menu.hscroll(class=invert_class)
        // .item
        // .ui.icon.small.transparent.input
        //     input.filter_models(type='text' placeholder='filter')
        //     i.search.link.icon
        // .ui.dropdown.icon.item
        //     i.wrench.icon
        //     .menu 
        //         .item
        //             i.dropdown.icon
        //             span.text new 
        //             .menu 
        //                 .item post
        //                 .item model
        each model_docs_helper 'model'
           a.item.zoomer.goto_model(title=ranking)
                // i.large.inbox.icon
                +i name=icon color=stripped_icon_color cl='ui avatar image zoomer'
                span.mobile.hidden 
                    small #{total_count}
                    |#{title}
                 
template(name='nav_item')
    a.item.zoomer.nav_item(class="{{ is_active_template template }}" title=label)
        i.large.icon(class=icon)
        // +i name=icon color='ffffff' cl='ui avatar image zoomer'
        // |&nbsp;
        |&nbsp;
        // unless hide_label
        //     span.zoomer.mobile.hidden #{label}

                 
template(name='top_nav_item')
    a.item.zoomer.mobile.hidden(href="/{{route}}" class="{{is_active_template route }}")
        // i.large.icon(class=icon)
        +i name=icon color=color cl='ui mini inline image'
        // |&nbsp;
        |&nbsp;
        span #{label}

                 
                    
template(name='coinbar')
    .ui.fluid.large.attached.segment.topbar
        .ui.middle.aligned.divided.list
            each recent_alerts
                +recent_alert
        a.ui.icon.attached.basic.button.item.close_topbar(href="/inbox")
            i.coins.large.icon
            |accounts
            
            
template(name='taskbar')
    .ui.top.sidebar.taskbar
        .ui.header tasks
        
template(name='addbar')
    .ui.top.sidebar.addbar
        .ui.header add
    
        
template(name='topbar')
    .ui.fluid.large.attached.segment.topbar
        .ui.middle.aligned.divided.list
            each recent_alerts
                +recent_alert
        a.ui.icon.attached.basic.button.item.close_topbar(href="/inbox")
            i.inbox.large.icon
            |inbox
        
template(name='recent_alert')        
    .item.alert
        .right.floated.content
            i.circular.eye.link.large.icon.mark_read(title='mark read')
        img.ui.avatar.image(src="{{c.url author.profile_image_id height=200 width=200 gravity='face' crop='fill'}}")
        .content
            .header
                |#{description} 
            .description #{author.name} #{made_when}
                    
                    
                    
template(name='rightbar')
    .ui.vertical.menu.right.sidebar.rightbar
        with currentUser
            a.item.toggle_rightbar.no_blink(href="/user/#{currentUser.username}" class="{{is_active_template 'user_layout'}}")
                img.ui.avatar.compact.image(src="{{c.url currentUser.image_id height=200 width=200 gravity='face' crop='fill'}}")
                |#{currentUser.name}
            a.item.toggle_rightbar(href="/user/#{username}" class="{{is_active_template regex='user_dashboard'}}")
                +i name='dashboard'
                // i.dashboard.icon
                |dashboard
            a.item.zoomer.toggle_darkmode
                if darkmode
                    +i name='checkmark'
                else
                    +i name='light'
                |dark mode
            each profile_nav_items
                +nav_item
            +nav_item template='my_organizations' icon='groups' color='83DFF4' label='organizations'
            +nav_item template='my_projects' icon='project' color='7229AF' label='projects'
            +nav_item template='my_events' icon='calendar' color='FAB005' label='events'
            +nav_item template='my_roles' icon='what-i-do' color='42E8C4' label='roles'
            +nav_item template='my_tasks' icon='task' color='B785E1' label='tasks'
            +nav_item template='my_resources' icon='car' color='FD7E14' label='resources'
            +nav_item template='my_skills' icon='wrench' color='ff0000' label='skills'
            +nav_item template='my_badges' label='badges' icon='badge' color='1255B8'
                
            +right_nav_item template='credit' label='credit' icon='money'
            +right_nav_item template='orders' label='orders' icon='check'
            +right_nav_item template='subscriptions' label='subscriptions' icon='check'
            +right_nav_item template='friends' label='friends' icon='friends'
            // a.item.toggle_rightbar(href="/user/#{username}/pantry" class="{{is_active_template 'user_pantry'}}")
            //     +i name='cupboard' cl='ui avatar image'
            //     |pantry
            +right_nav_item template='cart' label='cart' icon='shopping-cart'
            // a.item.toggle_rightbar(href="/work" class="{{is_active_template 'work'}}")
            //     +i name='trust' cl='ui avatar image'
            //     |work
            // a.item.toggle_rightbar(href="/user/#{username}/trips" class="{{is_active_template 'user_trips'}}")
            //     +i name='bicycle' cl='ui avatar image'
            //     |trips
            a.item.toggle_rightbar(href="/user/#{currentUser._id}/edit" class="{{is_active_template 'user_trips'}}")
                +i name='settings' 
                |account
            // .ui.divider
            a.item.logout
                if is_logging_out
                    i.refresh.loading.large.icon
                else
                    +i name='exit-sign' cl='ui avatar image'
                    // i.sign.out.icon
                |logout
        else 
            a.item.toggle_rightbar(href="/login" class="{{is_active_template 'login'}}")
                +i name='internal' cl='ui avatar image'
                |login
            a.item.toggle_rightbar(href="/register" class="{{is_active_template 'register'}}")
                +i name='plus' cl='ui avatar image'
                |register



template(name='right_nav_item')
    a.item.toggle_rightbar(href="/user/#{currentUser.username}/#{route}" class="{{is_active_template regex='user_dashboard'}}")
        // +i name=icon cl='ui avatar image'
        i.large.icon(class=icon)
        |#{label}


template(name='leftbar')
    .ui.sidebar.segment.leftbar
        .item leftbar
        // +session_toggle key='expand_leftbar' icon='heart outline'
            // +session_toggle key='add_mode' icon='plus'
            //.ui.icon.button.show_model
                i.large.plus.icon
            // .ui.fluid.small.button.toggle_leftbar
            //     i.chevron.left.icon
            .ui.hidden.divider
        +dash_user_info
        // a.ui.button.tertiary.delta(href="/m/model")
        //     |manage models
        div
        img.ui.small.circular.centered.image(src="/12-color-code.png")
        div
        .ui.two.wide.column
            each model_docs_helper 'eft'
                +eft_home_picker
                
        // if session_is 'expand_leftbar' true
        //     .ui.vertical.fluid.menu.mobile.hidden
        //         each model_docs_helper 'eft'
        //             +side_menu_item
        // else 
        //     .ui.vertical.fluid.icon.menu.mobile.hidden
        //         each model_docs_helper 'eft'
        //             +side_menu_item color=icon_color icon=icon label=title
        //             //.ui.button
        // .ui.button create request
    // .bordered.scrolling(class=main_column_class)
        
template(name='modelbar')
    .ui.vertical.sidebar.menu.modelbar
        .item 
            i.cubes.icon
            |models
        each model_docs_helper 'model'
            +leftbar_item
        
            
template(name='leftbar_item')    
    a.item.zoomer.close_leftbar.click_item.toggle_modelbar
        +i name=icon color=stripped_icon_color cl='ui avatar image'
        span #{title}
                
// template(name='nav_thing_picker')
    // .search.item.zoomer.mobile.hidden(title='search')
    //     .ui.icon.transparent.input
    //         if current_product_search
    //             i.remove.large.red.link.icon.clear_search
    //         else
    //             i.search.large.icon
    //         input.search_site(type='text' autocomplete="off" value=current_product_search)
    // .column.centered
    // .ui.top.attached.tabular.menu  
    // a.center.item.toggle_addmode.zoomer(data-tab='add' title='add thing')
    // a.item.toggle_addmode.zoomer(data-tab='add' title='add thing')
    //     +i name='play-button-circled--v1' color='40C057'
    //     // .active.item(data-tab='viewing')
    //     //     |viewing
    // .ui.bottom.attached.tab.segment.centered.ani(data-tab='add')
        //select type of thing you're creating >> open thing type editor modal
        // if session_is 'addmode' true
        //     +thing_picker model='post' icon='for-you' color='1255B8'
        //     //blue
        //     +thing_picker model='offer' icon='hand-holding-heart' color='FF73EA'
        //     //pink
        //     +thing_picker model='request' icon='commercial' color='40C057'     
        //     //green
            
        //     div
        //     +thing_picker model='org' icon='groups' color='83DFF4' 
        //     //light blue
        //     +thing_picker model='project' icon='project' color='7229AF' 
        //     //violet
        //     +thing_picker model='event' icon='calendar' color='FAB005'
        //     //yellow
        //     +thing_picker model='role' icon='what-i-do' color='42E8C4'
        //     //turquoise
        //     +thing_picker model='tasks' icon='task' color='B785E1'
        //     //lavender
        //     +thing_picker model='resource' icon='field-and-tractor' color='FD7E14'
        //     +thing_picker model='skills' icon='wrench' color='ff0000'
        //     //red
        //     +thing_picker model='badges' icon='badge' color='1255B8'
        //     //blue
        //     div
        //     +thing_picker model='datetime' icon='overtime--v1' color='FD7E14'
        //     +thing_picker model='location' icon='worldwide-location' color='40C057'
        //     +thing_picker model='accounts' icon='gold-bars' color='FAB005'
        //     //people
